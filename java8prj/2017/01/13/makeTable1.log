10:03:04,945  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 10:03:04 CST 2017]; root of context hierarchy
10:03:05,460  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
10:03:09,592  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
10:03:09,630  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:03:11,354  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:03:11,673 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
10:03:11,735 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
10:03:11,766 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
10:03:13,040  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
10:03:13,048  INFO Environment:213 - HHH000206: hibernate.properties not found
10:03:13,308 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
10:03:13,310 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
10:03:13,328 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
10:03:14,185 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
10:03:14,216 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
10:03:14,221 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
10:03:14,300 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
10:03:14,336  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10:03:14,382 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
10:03:14,383 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
10:03:14,455 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
10:03:18,291 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
10:03:18,292 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
10:03:18,292 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@463b4ac8
10:03:18,299 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d0d6318
10:03:18,307 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bff34c6
10:03:18,314 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5644dc81
10:03:18,321 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
10:03:18,323 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
10:03:18,323 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c42d2b7
10:03:18,330 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@774698ab
10:03:18,330 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@774698ab
10:03:18,331 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@774698ab
10:03:18,339 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
10:03:18,340 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
10:03:18,340 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b6b1987
10:03:18,344 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@7c541c15
10:03:18,345 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@7c541c15
10:03:18,347 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c541c15
10:03:18,358 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
10:03:18,358 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
10:03:18,360 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c1bd0be
10:03:18,366 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
10:03:18,366 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
10:03:18,368 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ad977d
10:03:18,378 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
10:03:18,379 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
10:03:18,379 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3e4aff
10:03:18,384 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62452cc9
10:03:18,385 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62452cc9
10:03:18,396 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7516e4e5
10:03:18,397 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7516e4e5
10:03:18,400 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3e7634b9
10:03:18,401 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7634b9
10:03:18,403 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@abf688e
10:03:18,411 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@686449f9
10:03:18,416 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@36f48b4
10:03:18,417 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36f48b4
10:03:18,445 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@3f792b9b
10:03:18,446 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f792b9b
10:03:18,600 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@52045dbe
10:03:18,601 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52045dbe
10:03:18,608 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
10:03:18,608 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
10:03:18,614 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4504d271
10:03:18,615 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4504d271
10:03:18,622 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
10:03:18,623 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
10:03:18,632 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
10:03:18,633 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
10:03:18,638 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
10:03:18,639 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
10:03:18,658 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
10:03:18,659 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
10:03:18,685 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@758c83d8
10:03:18,686 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@758c83d8
10:03:18,694 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@58359ebd
10:03:18,695 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58359ebd
10:03:18,697 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee37ca3
10:03:18,698 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee37ca3
10:03:18,698 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee37ca3
10:03:18,725 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b030a0
10:03:18,727 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@56bca85b
10:03:18,728 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56bca85b
10:03:18,728 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56bca85b
10:03:18,731 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d1a32f
10:03:18,734 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40c80397
10:03:18,734 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40c80397
10:03:18,737 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@7c2b6087
10:03:18,737 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c2b6087
10:03:18,740 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b324585
10:03:18,740 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b324585
10:03:18,743 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@5974109
10:03:18,743 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5974109
10:03:18,748 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75f5fd58
10:03:18,748 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75f5fd58
10:03:18,750 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12bcd0c0
10:03:18,755 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@4678a2eb
10:03:18,756 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4678a2eb
10:03:18,756 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@4678a2eb
10:03:18,762 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fdfafd2
10:03:18,762 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fdfafd2
10:03:18,763 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fdfafd2
10:03:18,767 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c87bfe2
10:03:18,769 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@4cc6fa2a
10:03:18,772 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@590c73d3
10:03:18,773 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@590c73d3
10:03:18,774 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@590c73d3
10:03:18,776 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@435871cb
10:03:18,777 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@435871cb
10:03:18,777 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@435871cb
10:03:18,779 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4bef0fe3
10:03:18,782 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@55b5f5d2
10:03:18,811 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2c88b9fc
10:03:18,812 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c88b9fc
10:03:18,813 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47605f2f
10:03:18,828 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@12dae582
10:03:18,829 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dae582
10:03:18,839 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@3c435123
10:03:18,840 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c435123
10:03:18,842 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a8fa663
10:03:18,844 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@546ccad7
10:03:18,851 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4264b240
10:03:18,871 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@30990c1b
10:03:18,872 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30990c1b
10:03:18,874 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dbe250d
10:03:18,875 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@553f1d75
10:03:18,875 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e1d8f9e
10:03:18,876 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e34ace1
10:03:18,876 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62fe6067
10:03:18,877 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f071df8
10:03:18,877 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de41af9
10:03:18,878 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ace400
10:03:20,297 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
10:03:20,298 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
10:03:20,298 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
10:03:20,379  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
10:03:20,514 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
10:03:20,521 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
10:03:20,855 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
10:03:20,859 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
10:03:20,867 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
10:03:20,868 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
10:03:20,871 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
10:03:20,877 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
10:03:20,882 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
10:03:20,908 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
10:03:20,913 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
10:03:20,916 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
10:03:20,918 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
10:03:20,919 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
10:03:20,920 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
10:03:20,930 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
10:03:21,256 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
10:03:21,430 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
10:03:21,440 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
10:03:21,441 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
10:03:21,452 DEBUG ModelBinder:2501 - Mapped property: id -> [id]
10:03:21,453 DEBUG ModelBinder:2501 - Mapped property: gname -> [gname]
10:03:21,454 DEBUG ModelBinder:2501 - Mapped property: pk -> [id, gname]
10:03:21,463 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [mobilegoods]
10:03:21,464 DEBUG PrimaryKey:35 - Forcing column [gname] to be non-null as it is part of the primary key for table [mobilegoods]
10:03:21,464 DEBUG ModelBinder:2501 - Mapped property: price -> [price]
10:03:21,470 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.jd.MobileGoods] is safe
10:03:21,470 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.jd.MobileGoods
10:03:21,732  WARN RootClass:285 - HHH000038: Composite-id class does not override equals(): qin.javaee8.jd.GoodsPK
10:03:21,732  WARN RootClass:288 - HHH000039: Composite-id class does not override hashCode(): qin.javaee8.jd.GoodsPK
10:03:21,776 DEBUG SessionFactoryImpl:199 - Building session factory
10:03:21,779 DEBUG Settings:69 - SessionFactory name : null
10:03:21,779 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
10:03:21,827 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
10:03:21,827 DEBUG Settings:73 - Statistics: disabled
10:03:21,828 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
10:03:21,828 DEBUG Settings:76 - Default entity-mode: pojo
10:03:21,828 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
10:03:21,829 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
10:03:21,850 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
10:03:21,850 DEBUG Settings:81 - Default batch fetch size: -1
10:03:21,851 DEBUG Settings:82 - Maximum outer join fetch depth: 2
10:03:21,851 DEBUG Settings:83 - Default null ordering: NONE
10:03:21,852 DEBUG Settings:84 - Order SQL updates by primary key: disabled
10:03:21,852 DEBUG Settings:85 - Order SQL inserts for batching: disabled
10:03:21,853 DEBUG Settings:87 - multi-tenancy strategy : NONE
10:03:21,853 DEBUG Settings:89 - JTA Track by Thread: enabled
10:03:21,853 DEBUG Settings:91 - Query language substitutions: {}
10:03:21,860 DEBUG Settings:92 - JPA query language strict compliance: disabled
10:03:21,861 DEBUG Settings:93 - Named query checking : enabled
10:03:21,861 DEBUG Settings:95 - Second-level cache: enabled
10:03:21,863 DEBUG Settings:96 - Second-level query cache: disabled
10:03:21,863 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4c432866
10:03:21,864 DEBUG Settings:98 - Second-level cache region prefix: null
10:03:22,586 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
10:03:22,587 DEBUG Settings:100 - Structured second-level cache entries: disabled
10:03:22,587 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
10:03:22,587 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
10:03:22,605 DEBUG Settings:104 - JDBC batch size: 15
10:03:22,606 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
10:03:22,607 DEBUG Settings:106 - Scrollable result sets: enabled
10:03:22,607 DEBUG Settings:107 - Wrap result sets: disabled
10:03:22,608 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
10:03:22,608 DEBUG Settings:109 - JDBC result set fetch size: null
10:03:22,608 DEBUG Settings:110 - Connection release mode: ON_CLOSE
10:03:22,609 DEBUG Settings:111 - Generate SQL with comments: disabled
10:03:22,834 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
10:03:22,835 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\lib\idea_rt.jar;E:\software\jetbrains\IntelliJ IDEA 171.1834.9\plugins\junit\lib\junit-rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\deploy.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\access-bridge-64.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\cldrdata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\dnsns.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jaccess.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jfxrt.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\localedata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\nashorn.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunec.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunjce_provider.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunmscapi.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunpkcs11.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\zipfs.jar;E:\software\jdk1.8x64\jdk\jre\lib\javaws.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfxswt.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\management-agent.jar;E:\software\jdk1.8x64\jdk\jre\lib\plugin.jar;E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;D:\idea2016WK\out\javaee82017\default\test\JavaEE8Tools2017;D:\idea2016WK\out\javaee82017\default\production\JavaEE8Tools2017;D:\idea2016WK\github\tomcat8x64_idea\lib\jsp-api.jar;D:\idea2016WK\github\tomcat8x64_idea\lib\servlet-api.jar;D:\idea2016WK\github\lib8\antlr-2.7.7.jar;D:\idea2016WK\github\lib8\aspectjweaver-1.8.9.jar;D:\idea2016WK\github\lib8\cdi-api-1.1.jar;D:\idea2016WK\github\lib8\classmate-1.3.0.jar;D:\idea2016WK\github\lib8\commons-logging-1.2.jar;D:\idea2016WK\github\lib8\dom4j-1.6.1.jar;D:\idea2016WK\github\lib8\el-api-2.2.jar;D:\idea2016WK\github\lib8\geronimo-jta_1.1_spec-1.1.1.jar;D:\idea2016WK\github\lib8\hibernate-commons-annotations-5.0.1.Final.jar;D:\idea2016WK\github\lib8\hibernate-core-5.2.5.Final.jar;D:\idea2016WK\github\lib8\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\idea2016WK\github\lib8\jandex-2.0.3.Final.jar;D:\idea2016WK\github\lib8\javassist-3.20.0-GA.jar;D:\idea2016WK\github\lib8\javax.inject-1.jar;D:\idea2016WK\github\lib8\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\idea2016WK\github\lib8\jboss-logging-3.3.0.Final.jar;D:\idea2016WK\github\lib8\jsr250-api-1.0.jar;D:\idea2016WK\github\lib8\jstl-1.2.jar;D:\idea2016WK\github\lib8\spring-aop-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-aspects-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-beans-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-support-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-core-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-expression-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-tomcat-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jdbc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jms-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-messaging-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-orm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-oxm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-test-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-tx-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-web-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-portlet-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-websocket-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\tomcat-servlet-api-8.5.9.jar;D:\idea2016WK\libs\log4j-1.2.17.jar;D:\idea2016WK\libs\junit-4.11.jar;D:\idea2016WK\libs\mysql-connector-java-5.1.35-bin.jar;D:\idea2016WK\libs\slf4j-api-1.7.10.jar;D:\idea2016WK\libs\slf4j-log4j12-1.7.10.jar;D:\idea2016WK\libs\hamcrest-all-1.3.jar;D:\idea2016WK\libs\oracle-driver-ojdbc-12.1.0.2.jar;D:\idea2016WK\out\javaee82017\default\production\javaee8-core;D:\idea2016WK\out\javaee82017\default\production\javaee8-hibernate, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, os.name=Windows 7, java.vm.specification.version=1.8, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=E:\software\jdk1.8x64\jdk\jre\bin, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 qin.javaee8.test.MakeTable, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, idea.launcher.port=7008, java.specification.vendor=Oracle Corporation, java.home=E:\software\jdk1.8x64\jdk\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\sunrsasign.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0-b132, user.name=Administrator, path.separator=;, os.version=6.1, java.endorsed.dirs=E:\software\jdk1.8x64\jdk\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@6d06d69c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, idea.launcher.bin.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\bin, java.version=1.8.0, user.dir=D:\idea2016WK\github\JavaEE8Tools2017, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c827db, java.library.path=E:\software\jdk1.8x64\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;d:\app\Administrator\product\12.1.0\dbhome_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;E:\software\maven0339\bin;C:\Program Files\TortoiseSVN\bin;E:\software\visual_svn\bin;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\TortoiseGit\bin;D:\xampps\perl\bin\;C:\Program Files\MySQL\MySQL Utilities 1.6\;E:\xampps\perl\bin\;E:\software\ZendServer\ZendServer\share\ZendFramework\bin;E:\software\ZendServer\ZendServer\bin;E:\software\Zend\DB2\BIN;E:\software\Zend\DB2\FUNCTION;C:\Program Files\MySQL\MySQL Server 5.7\bin;E:\software\jdk1.8x64\jdk\bin;C:\Users\Administrator\AppData\Local\atom\bin;E:\software\搜狐影音\5.0.2.23;e:\software\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.0-b70, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@ba2f4ec, java.ext.dirs=E:\software\jdk1.8x64\jdk\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
10:03:22,879 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
10:03:22,961 DEBUG SessionFactoryImpl:294 - Instantiated session factory
10:03:23,596 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.jd.MobileGoods
10:03:23,596 DEBUG AbstractEntityPersister:3549 -  Version select: select id, gname from MobileGoods where id =? and gname =?
10:03:23,597 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select mobilegood_.id, mobilegood_.gname, mobilegood_.price as price3_0_ from MobileGoods mobilegood_ where mobilegood_.id=? and mobilegood_.gname=?
10:03:23,597 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into MobileGoods (price, id, gname) values (?, ?, ?)
10:03:23,598 DEBUG AbstractEntityPersister:394 -  Update 0: update MobileGoods set price=? where id=? and gname=?
10:03:23,598 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from MobileGoods where id=? and gname=?
10:03:23,814 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0a9fa5]
10:03:23,818 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fbfa96]
10:03:23,858 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:23,859 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:23,862 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:23,863 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:23,958 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:23,970 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:23,981 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [NONE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:03:23,982 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185]
10:03:23,982 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c20ffa8]
10:03:23,983 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:23,983 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:23,984 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:23,984 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:23,986 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:23,989 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:23,990 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [READ]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:03:23,991 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4664d7]
10:03:23,991 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@46c00568]
10:03:23,996 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:23,996 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:23,997 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:23,997 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:23,998 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:23,999 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:23,999 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:03:24,000 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bcbf05b]
10:03:24,000 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2d66530f]
10:03:24,001 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,001 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,002 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,002 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,003 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,004 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,005 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_NOWAIT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:03:24,005 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4690f583]
10:03:24,006 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@59712875]
10:03:24,009 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,010 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,010 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,010 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,011 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,025 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,026 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_SKIPLOCKED]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:03:24,026 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1869f114]
10:03:24,026 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@488b50ec]
10:03:24,027 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,027 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,028 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,028 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,029 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,029 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,030 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [FORCE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:03:24,030 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37a64f9d]
10:03:24,031 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@25b865b5]
10:03:24,033 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,033 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,034 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,036 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,037 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,038 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,039 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_READ]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? lock in share mode
10:03:24,039 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2d99fc]
10:03:24,040 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@bdecc21]
10:03:24,040 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,041 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,041 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,042 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,042 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,043 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,044 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_WRITE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:03:24,044 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201aa8c1]
10:03:24,045 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5d58c727]
10:03:24,045 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,046 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,046 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,047 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,047 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,048 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,049 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_FORCE_INCREMENT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:03:24,049 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f20a5e0]
10:03:24,050 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@54da32dc]
10:03:24,050 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,051 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,051 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,052 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,052 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,053 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,054 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:03:24,054 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b22f74]
10:03:24,055 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22fba58c]
10:03:24,055 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:03:24,055 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:03:24,056 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:03:24,056 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:03:24,060 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:03:24,061 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:03:24,062 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC_FORCE_INCREMENT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:03:24,208 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:03:24,209 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:03:24,529 DEBUG SQL:92 - 
    
    create table MobileGoods (
        id bigint not null,
        gname varchar(255) not null,
        price double precision,
        primary key (id, gname)
    ) ENGINE=InnoDB
10:03:24,647 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
10:03:24,650 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
10:03:24,664 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
10:03:24,667 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
10:03:24,668 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
10:03:24,682 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@388b401d
10:03:24,683 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: da24e4d5-a597-40bf-9e35-ae56c590ca64 (<unnamed>)
10:03:24,683 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
10:03:24,859  INFO HibernateTransactionManager:357 - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@ba2f4ec] of Hibernate SessionFactory for HibernateTransactionManager
10:03:25,471 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
10:03:25,493 DEBUG TransactionImpl:55 - begin
