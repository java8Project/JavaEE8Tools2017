10:10:56,832  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1ee807c6: startup date [Fri Jan 13 10:10:56 CST 2017]; root of context hierarchy
10:10:57,137  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
10:10:58,788  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
10:10:58,820  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:10:59,729  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:10:59,948 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
10:10:59,955 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
10:10:59,969 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
10:11:00,590  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
10:11:00,596  INFO Environment:213 - HHH000206: hibernate.properties not found
10:11:00,666 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
10:11:00,667 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
10:11:00,676 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
10:11:01,071 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
10:11:01,104 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
10:11:01,104 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
10:11:01,179 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
10:11:01,209  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10:11:01,252 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
10:11:01,253 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
10:11:01,355 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
10:11:04,359 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a32fb6
10:11:04,365 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a32fb6
10:11:04,366 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a32fb6
10:11:04,385 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6009bea
10:11:04,390 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@58ec7116
10:11:04,393 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56078cea
10:11:04,400 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@1bf39d06
10:11:04,400 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@1bf39d06
10:11:04,401 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1bf39d06
10:11:04,406 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@367b22e5
10:11:04,407 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@367b22e5
10:11:04,408 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@367b22e5
10:11:04,413 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@36ddaebf
10:11:04,413 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@36ddaebf
10:11:04,414 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@36ddaebf
10:11:04,441 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@4bbb49b0
10:11:04,442 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@4bbb49b0
10:11:04,442 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4bbb49b0
10:11:04,449 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@390877d2
10:11:04,449 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@390877d2
10:11:04,450 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@390877d2
10:11:04,462 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@7afbf561
10:11:04,463 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@7afbf561
10:11:04,463 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7afbf561
10:11:04,467 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@240f6c41
10:11:04,470 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@240f6c41
10:11:04,471 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@240f6c41
10:11:04,476 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@112d1c8e
10:11:04,477 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@112d1c8e
10:11:04,481 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@213bd3d5
10:11:04,482 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@213bd3d5
10:11:04,486 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@7bebcd65
10:11:04,487 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7bebcd65
10:11:04,492 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e84111a
10:11:04,503 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ea899a9
10:11:04,507 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@67594471
10:11:04,507 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@67594471
10:11:04,511 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@d48673
10:11:04,512 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d48673
10:11:04,557 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@588307f7
10:11:04,558 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@588307f7
10:11:04,562 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7acfb656
10:11:04,563 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7acfb656
10:11:04,573 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@28f878a0
10:11:04,574 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@28f878a0
10:11:04,581 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6bbe50c9
10:11:04,582 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6bbe50c9
10:11:04,587 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5eb2172
10:11:04,588 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5eb2172
10:11:04,593 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1744a475
10:11:04,594 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1744a475
10:11:04,608 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e530163
10:11:04,609 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e530163
10:11:04,615 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@3e48d38
10:11:04,618 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e48d38
10:11:04,622 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@10fbbdb
10:11:04,623 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@10fbbdb
10:11:04,628 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@20a05b32
10:11:04,628 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@20a05b32
10:11:04,629 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@20a05b32
10:11:04,636 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ab5afc7
10:11:04,641 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@4aedaf61
10:11:04,642 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4aedaf61
10:11:04,643 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4aedaf61
10:11:04,646 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ffaaaf0
10:11:04,649 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@62d73ead
10:11:04,650 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@62d73ead
10:11:04,655 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@73fc518f
10:11:04,655 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73fc518f
10:11:04,660 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cc03cd1
10:11:04,661 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cc03cd1
10:11:04,665 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@21e20ad5
10:11:04,666 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21e20ad5
10:11:04,673 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3abfe845
10:11:04,673 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3abfe845
10:11:04,678 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f08caf
10:11:04,684 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@40e60ece
10:11:04,687 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@40e60ece
10:11:04,688 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@40e60ece
10:11:04,698 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4893b344
10:11:04,699 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4893b344
10:11:04,699 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4893b344
10:11:04,708 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@51b35e4e
10:11:04,712 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@62db0521
10:11:04,715 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@7be3a9ce
10:11:04,716 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7be3a9ce
10:11:04,717 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@7be3a9ce
10:11:04,721 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b59501e
10:11:04,722 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b59501e
10:11:04,723 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b59501e
10:11:04,728 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@153cd6bb
10:11:04,731 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@6428591a
10:11:04,751 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2dd8239
10:11:04,752 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2dd8239
10:11:04,754 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e53b094
10:11:04,779 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@58496c97
10:11:04,780 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58496c97
10:11:04,799 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@17a703f5
10:11:04,799 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17a703f5
10:11:04,802 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3531f3ca
10:11:04,804 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5fe7f967
10:11:04,809 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e1a3801
10:11:04,829 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@2184b4f4
10:11:04,829 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2184b4f4
10:11:04,832 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@316a598d
10:11:04,832 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@216914
10:11:04,833 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ba30587
10:11:04,833 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35764bef
10:11:04,834 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5633dafd
10:11:04,834 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d5160e6
10:11:04,835 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2eadc9f6
10:11:04,835 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2903c6ff
10:11:05,788 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
10:11:05,788 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
10:11:05,789 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
10:11:05,831  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
10:11:05,963 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
10:11:05,967 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
10:11:06,220 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
10:11:06,221 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
10:11:06,224 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
10:11:06,226 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
10:11:06,227 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
10:11:06,232 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
10:11:06,233 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
10:11:06,237 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
10:11:06,240 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
10:11:06,242 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
10:11:06,244 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
10:11:06,248 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
10:11:06,249 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
10:11:06,253 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
10:11:06,418 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
10:11:06,673 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
10:11:06,686 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
10:11:06,686 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
10:11:06,698 DEBUG ModelBinder:2501 - Mapped property: id -> [id]
10:11:06,698 DEBUG ModelBinder:2501 - Mapped property: gname -> [gname]
10:11:06,700 DEBUG ModelBinder:2501 - Mapped property: pk -> [id, gname]
10:11:06,705 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [mobilegoods]
10:11:06,706 DEBUG PrimaryKey:35 - Forcing column [gname] to be non-null as it is part of the primary key for table [mobilegoods]
10:11:06,707 DEBUG ModelBinder:2501 - Mapped property: price -> [price]
10:11:06,714 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.jd.MobileGoods] is safe
10:11:06,715 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.jd.MobileGoods
10:17:24,070  WARN RootClass:285 - HHH000038: Composite-id class does not override equals(): qin.javaee8.jd.GoodsPK
10:17:24,070  WARN RootClass:288 - HHH000039: Composite-id class does not override hashCode(): qin.javaee8.jd.GoodsPK
10:17:24,117 DEBUG SessionFactoryImpl:199 - Building session factory
10:17:24,120 DEBUG Settings:69 - SessionFactory name : null
10:17:24,121 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
10:17:24,121 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
10:17:24,122 DEBUG Settings:73 - Statistics: disabled
10:17:24,122 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
10:17:24,122 DEBUG Settings:76 - Default entity-mode: pojo
10:17:24,123 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
10:17:24,123 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
10:17:24,124 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
10:17:24,125 DEBUG Settings:81 - Default batch fetch size: -1
10:17:24,125 DEBUG Settings:82 - Maximum outer join fetch depth: 2
10:17:24,126 DEBUG Settings:83 - Default null ordering: NONE
10:17:24,126 DEBUG Settings:84 - Order SQL updates by primary key: disabled
10:17:24,126 DEBUG Settings:85 - Order SQL inserts for batching: disabled
10:17:24,127 DEBUG Settings:87 - multi-tenancy strategy : NONE
10:17:24,127 DEBUG Settings:89 - JTA Track by Thread: enabled
10:17:24,127 DEBUG Settings:91 - Query language substitutions: {}
10:17:24,128 DEBUG Settings:92 - JPA query language strict compliance: disabled
10:17:24,128 DEBUG Settings:93 - Named query checking : enabled
10:17:24,129 DEBUG Settings:95 - Second-level cache: enabled
10:17:24,129 DEBUG Settings:96 - Second-level query cache: disabled
10:17:24,129 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5a8816cc
10:17:24,130 DEBUG Settings:98 - Second-level cache region prefix: null
10:17:24,130 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
10:17:24,131 DEBUG Settings:100 - Structured second-level cache entries: disabled
10:17:24,131 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
10:17:24,131 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
10:17:24,143 DEBUG Settings:104 - JDBC batch size: 15
10:17:24,143 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
10:17:24,144 DEBUG Settings:106 - Scrollable result sets: enabled
10:17:24,144 DEBUG Settings:107 - Wrap result sets: disabled
10:17:24,145 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
10:17:24,146 DEBUG Settings:109 - JDBC result set fetch size: null
10:17:24,146 DEBUG Settings:110 - Connection release mode: ON_CLOSE
10:17:24,147 DEBUG Settings:111 - Generate SQL with comments: disabled
10:17:24,762 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
10:17:24,763 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\lib\idea_rt.jar;E:\software\jetbrains\IntelliJ IDEA 171.1834.9\plugins\junit\lib\junit-rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\deploy.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\access-bridge-64.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\cldrdata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\dnsns.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jaccess.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jfxrt.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\localedata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\nashorn.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunec.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunjce_provider.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunmscapi.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunpkcs11.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\zipfs.jar;E:\software\jdk1.8x64\jdk\jre\lib\javaws.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfxswt.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\management-agent.jar;E:\software\jdk1.8x64\jdk\jre\lib\plugin.jar;E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;D:\idea2016WK\out\javaee82017\default\test\JavaEE8Tools2017;D:\idea2016WK\out\javaee82017\default\production\JavaEE8Tools2017;D:\idea2016WK\github\tomcat8x64_idea\lib\jsp-api.jar;D:\idea2016WK\github\tomcat8x64_idea\lib\servlet-api.jar;D:\idea2016WK\github\lib8\antlr-2.7.7.jar;D:\idea2016WK\github\lib8\aspectjweaver-1.8.9.jar;D:\idea2016WK\github\lib8\cdi-api-1.1.jar;D:\idea2016WK\github\lib8\classmate-1.3.0.jar;D:\idea2016WK\github\lib8\commons-logging-1.2.jar;D:\idea2016WK\github\lib8\dom4j-1.6.1.jar;D:\idea2016WK\github\lib8\el-api-2.2.jar;D:\idea2016WK\github\lib8\geronimo-jta_1.1_spec-1.1.1.jar;D:\idea2016WK\github\lib8\hibernate-commons-annotations-5.0.1.Final.jar;D:\idea2016WK\github\lib8\hibernate-core-5.2.5.Final.jar;D:\idea2016WK\github\lib8\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\idea2016WK\github\lib8\jandex-2.0.3.Final.jar;D:\idea2016WK\github\lib8\javassist-3.20.0-GA.jar;D:\idea2016WK\github\lib8\javax.inject-1.jar;D:\idea2016WK\github\lib8\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\idea2016WK\github\lib8\jboss-logging-3.3.0.Final.jar;D:\idea2016WK\github\lib8\jsr250-api-1.0.jar;D:\idea2016WK\github\lib8\jstl-1.2.jar;D:\idea2016WK\github\lib8\spring-aop-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-aspects-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-beans-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-support-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-core-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-expression-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-tomcat-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jdbc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jms-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-messaging-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-orm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-oxm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-test-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-tx-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-web-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-portlet-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-websocket-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\tomcat-servlet-api-8.5.9.jar;D:\idea2016WK\libs\log4j-1.2.17.jar;D:\idea2016WK\libs\junit-4.11.jar;D:\idea2016WK\libs\mysql-connector-java-5.1.35-bin.jar;D:\idea2016WK\libs\slf4j-api-1.7.10.jar;D:\idea2016WK\libs\slf4j-log4j12-1.7.10.jar;D:\idea2016WK\libs\hamcrest-all-1.3.jar;D:\idea2016WK\libs\oracle-driver-ojdbc-12.1.0.2.jar;D:\idea2016WK\out\javaee82017\default\production\javaee8-core;D:\idea2016WK\out\javaee82017\default\production\javaee8-hibernate, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, os.name=Windows 7, java.vm.specification.version=1.8, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=E:\software\jdk1.8x64\jdk\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 qin.javaee8.test.MakeTable, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=E:\software\jdk1.8x64\jdk\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\sunrsasign.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0-b132, user.name=Administrator, path.separator=;, os.version=6.1, java.endorsed.dirs=E:\software\jdk1.8x64\jdk\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@58644d46], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, java.version=1.8.0, user.dir=D:\idea2016WK\github\JavaEE8Tools2017, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e32fc22, java.library.path=E:\software\jdk1.8x64\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;d:\app\Administrator\product\12.1.0\dbhome_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;E:\software\maven0339\bin;C:\Program Files\TortoiseSVN\bin;E:\software\visual_svn\bin;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\TortoiseGit\bin;D:\xampps\perl\bin\;C:\Program Files\MySQL\MySQL Utilities 1.6\;E:\xampps\perl\bin\;E:\software\ZendServer\ZendServer\share\ZendFramework\bin;E:\software\ZendServer\ZendServer\bin;E:\software\Zend\DB2\BIN;E:\software\Zend\DB2\FUNCTION;C:\Program Files\MySQL\MySQL Server 5.7\bin;E:\software\jdk1.8x64\jdk\bin;C:\Users\Administrator\AppData\Local\atom\bin;E:\software\搜狐影音\5.0.2.23;e:\software\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.0-b70, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@1b73be9f, java.ext.dirs=E:\software\jdk1.8x64\jdk\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
10:17:24,822 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
10:17:24,862 DEBUG SessionFactoryImpl:294 - Instantiated session factory
10:17:25,150 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.jd.MobileGoods
10:17:25,151 DEBUG AbstractEntityPersister:3549 -  Version select: select id, gname from MobileGoods where id =? and gname =?
10:17:25,152 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select mobilegood_.id, mobilegood_.gname, mobilegood_.price as price3_0_ from MobileGoods mobilegood_ where mobilegood_.id=? and mobilegood_.gname=?
10:17:25,152 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into MobileGoods (price, id, gname) values (?, ?, ?)
10:17:25,152 DEBUG AbstractEntityPersister:394 -  Update 0: update MobileGoods set price=? where id=? and gname=?
10:17:25,153 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from MobileGoods where id=? and gname=?
10:17:25,258 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1934ad7c]
10:17:25,262 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1280682]
10:17:25,282 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,283 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,284 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,284 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,327 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,343 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,359 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [NONE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:17:25,360 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d3473e]
10:17:25,360 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4dad0eed]
10:17:25,360 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,361 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,361 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,362 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,362 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,363 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,373 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [READ]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:17:25,374 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75cf0de5]
10:17:25,374 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@50b0afd7]
10:17:25,375 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,375 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,376 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,376 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,377 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,379 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,379 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:17:25,379 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5bd362]
10:17:25,380 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a401749]
10:17:25,380 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,381 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,381 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,382 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,382 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,384 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,384 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_NOWAIT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:17:25,385 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16132f21]
10:17:25,385 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2cd388f5]
10:17:25,386 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,386 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,387 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,387 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,387 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,389 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,389 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_SKIPLOCKED]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:17:25,390 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f323b3a]
10:17:25,390 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4f169009]
10:17:25,391 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,391 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,392 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,392 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,393 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,394 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,395 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [FORCE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:17:25,395 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c829dbc]
10:17:25,396 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@57efc6fd]
10:17:25,396 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,396 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,397 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,400 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,400 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,402 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,402 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_READ]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? lock in share mode
10:17:25,403 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3e11b9]
10:17:25,404 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67cffead]
10:17:25,404 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,405 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,405 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,405 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,406 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,407 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,407 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_WRITE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:17:25,408 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@217c23ce]
10:17:25,409 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@39de9bda]
10:17:25,410 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,410 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,410 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,411 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,412 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,413 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,414 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_FORCE_INCREMENT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:17:25,415 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1200458e]
10:17:25,415 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5fcd1c5f]
10:17:25,419 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,419 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,420 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,498 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,499 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,500 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,500 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:17:25,501 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dee8ae6]
10:17:25,501 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5af64ce0]
10:17:25,502 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:17:25,502 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:17:25,502 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:17:25,503 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:17:25,503 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:17:25,505 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:17:25,505 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC_FORCE_INCREMENT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:17:25,558 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:17:25,559 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:17:25,850 DEBUG Table:505 - No alter strings for table : MobileGoods
10:17:25,854 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
10:17:25,856 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
10:17:25,878 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
10:17:25,883 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
10:17:25,883 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
10:17:25,889 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7741d346
10:17:25,890 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b3eb9305-4d32-4d75-b334-3a2bdfbc7498 (<unnamed>)
10:17:25,890 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
10:17:26,131  INFO HibernateTransactionManager:357 - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@1b73be9f] of Hibernate SessionFactory for HibernateTransactionManager
10:17:26,710 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
10:17:26,728 DEBUG TransactionImpl:55 - begin
