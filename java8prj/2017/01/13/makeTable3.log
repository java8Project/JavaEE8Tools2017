10:26:49,816  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 10:26:49 CST 2017]; root of context hierarchy
10:26:50,030  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
10:26:51,386  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
10:26:51,400  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:26:52,442  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:26:52,661 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
10:26:52,665 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
10:26:52,674 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
10:26:53,138  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
10:26:53,143  INFO Environment:213 - HHH000206: hibernate.properties not found
10:26:53,208 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
10:26:53,209 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
10:26:53,216 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
10:26:53,648 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
10:26:53,685 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
10:26:53,686 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
10:26:53,737 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
10:26:53,756  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
10:26:53,783 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
10:26:53,784 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
10:26:53,839 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
10:26:57,044 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
10:26:57,046 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
10:26:57,046 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@463b4ac8
10:26:57,048 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d0d6318
10:26:57,051 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bff34c6
10:26:57,053 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5644dc81
10:26:57,063 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
10:26:57,063 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
10:26:57,064 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c42d2b7
10:26:57,074 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@774698ab
10:26:57,074 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@774698ab
10:26:57,075 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@774698ab
10:26:57,079 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
10:26:57,080 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
10:26:57,081 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b6b1987
10:26:57,092 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@7c541c15
10:26:57,093 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@7c541c15
10:26:57,093 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c541c15
10:26:57,098 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
10:26:57,098 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
10:26:57,099 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c1bd0be
10:26:57,103 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
10:26:57,104 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
10:26:57,104 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ad977d
10:26:57,108 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
10:26:57,111 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
10:26:57,113 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3e4aff
10:26:57,119 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62452cc9
10:26:57,120 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62452cc9
10:26:57,124 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7516e4e5
10:26:57,126 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7516e4e5
10:26:57,128 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3e7634b9
10:26:57,129 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7634b9
10:26:57,134 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@abf688e
10:26:57,137 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@686449f9
10:26:57,145 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@36f48b4
10:26:57,146 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36f48b4
10:26:57,149 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@3f792b9b
10:26:57,149 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f792b9b
10:26:57,193 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@52045dbe
10:26:57,194 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52045dbe
10:26:57,198 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
10:26:57,199 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
10:26:57,204 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4504d271
10:26:57,205 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4504d271
10:26:57,208 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
10:26:57,209 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
10:26:57,212 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
10:26:57,213 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
10:26:57,218 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
10:26:57,219 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
10:26:57,242 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
10:26:57,243 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
10:26:57,248 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@758c83d8
10:26:57,248 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@758c83d8
10:26:57,277 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@58359ebd
10:26:57,277 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58359ebd
10:26:57,281 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee37ca3
10:26:57,282 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee37ca3
10:26:57,282 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee37ca3
10:26:57,288 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b030a0
10:26:57,304 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@56bca85b
10:26:57,307 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56bca85b
10:26:57,308 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56bca85b
10:26:57,310 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d1a32f
10:26:57,317 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40c80397
10:26:57,318 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40c80397
10:26:57,320 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@7c2b6087
10:26:57,321 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c2b6087
10:26:57,323 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b324585
10:26:57,323 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b324585
10:26:57,328 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@5974109
10:26:57,328 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5974109
10:26:57,332 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75f5fd58
10:26:57,332 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75f5fd58
10:26:57,334 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12bcd0c0
10:26:57,338 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@4678a2eb
10:26:57,339 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4678a2eb
10:26:57,339 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@4678a2eb
10:26:57,345 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fdfafd2
10:26:57,347 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fdfafd2
10:26:57,347 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fdfafd2
10:26:57,352 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c87bfe2
10:26:57,354 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@4cc6fa2a
10:26:57,359 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@590c73d3
10:26:57,359 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@590c73d3
10:26:57,360 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@590c73d3
10:26:57,363 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@435871cb
10:26:57,363 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@435871cb
10:26:57,364 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@435871cb
10:26:57,367 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4bef0fe3
10:26:57,369 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@55b5f5d2
10:26:57,418 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2c88b9fc
10:26:57,420 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c88b9fc
10:26:57,422 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47605f2f
10:26:57,435 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@12dae582
10:26:57,436 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dae582
10:26:57,449 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@3c435123
10:26:57,449 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c435123
10:26:57,451 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a8fa663
10:26:57,456 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@546ccad7
10:26:57,464 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4264b240
10:26:57,496 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@30990c1b
10:26:57,496 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30990c1b
10:26:57,498 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dbe250d
10:26:57,498 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@553f1d75
10:26:57,499 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e1d8f9e
10:26:57,499 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e34ace1
10:26:57,500 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62fe6067
10:26:57,500 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f071df8
10:26:57,501 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de41af9
10:26:57,501 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ace400
10:26:58,359 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
10:26:58,361 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
10:26:58,361 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
10:26:58,399  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
10:26:58,517 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
10:26:58,522 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
10:26:58,736 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
10:26:58,738 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
10:26:58,740 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
10:26:58,740 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
10:26:58,742 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
10:26:58,746 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
10:26:58,747 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
10:26:58,751 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
10:26:58,754 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
10:26:58,755 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
10:26:58,757 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
10:26:58,760 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
10:26:58,761 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
10:26:58,763 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
10:26:58,898 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
10:26:58,948 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
10:26:58,958 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
10:26:58,964 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
10:26:58,973 DEBUG ModelBinder:2501 - Mapped property: id -> [id]
10:26:58,975 DEBUG ModelBinder:2501 - Mapped property: gname -> [gname]
10:26:58,976 DEBUG ModelBinder:2501 - Mapped property: pk -> [id, gname]
10:26:58,981 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [mobilegoods]
10:26:58,982 DEBUG PrimaryKey:35 - Forcing column [gname] to be non-null as it is part of the primary key for table [mobilegoods]
10:26:58,983 DEBUG ModelBinder:2501 - Mapped property: price -> [price]
10:26:58,990 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.jd.MobileGoods] is safe
10:26:58,991 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.jd.MobileGoods
10:26:59,116 DEBUG SessionFactoryImpl:199 - Building session factory
10:26:59,119 DEBUG Settings:69 - SessionFactory name : null
10:26:59,119 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
10:26:59,119 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
10:26:59,120 DEBUG Settings:73 - Statistics: disabled
10:26:59,120 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
10:26:59,120 DEBUG Settings:76 - Default entity-mode: pojo
10:26:59,121 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
10:26:59,121 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
10:26:59,121 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
10:26:59,122 DEBUG Settings:81 - Default batch fetch size: -1
10:26:59,122 DEBUG Settings:82 - Maximum outer join fetch depth: 2
10:26:59,122 DEBUG Settings:83 - Default null ordering: NONE
10:26:59,123 DEBUG Settings:84 - Order SQL updates by primary key: disabled
10:26:59,123 DEBUG Settings:85 - Order SQL inserts for batching: disabled
10:26:59,124 DEBUG Settings:87 - multi-tenancy strategy : NONE
10:26:59,124 DEBUG Settings:89 - JTA Track by Thread: enabled
10:26:59,124 DEBUG Settings:91 - Query language substitutions: {}
10:26:59,125 DEBUG Settings:92 - JPA query language strict compliance: disabled
10:26:59,125 DEBUG Settings:93 - Named query checking : enabled
10:26:59,125 DEBUG Settings:95 - Second-level cache: enabled
10:26:59,126 DEBUG Settings:96 - Second-level query cache: disabled
10:26:59,127 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4c432866
10:26:59,127 DEBUG Settings:98 - Second-level cache region prefix: null
10:26:59,127 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
10:26:59,128 DEBUG Settings:100 - Structured second-level cache entries: disabled
10:26:59,128 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
10:26:59,129 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
10:26:59,129 DEBUG Settings:104 - JDBC batch size: 15
10:26:59,129 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
10:26:59,130 DEBUG Settings:106 - Scrollable result sets: enabled
10:26:59,130 DEBUG Settings:107 - Wrap result sets: disabled
10:26:59,130 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
10:26:59,131 DEBUG Settings:109 - JDBC result set fetch size: null
10:26:59,131 DEBUG Settings:110 - Connection release mode: ON_CLOSE
10:26:59,132 DEBUG Settings:111 - Generate SQL with comments: disabled
10:26:59,706 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
10:26:59,707 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\lib\idea_rt.jar;E:\software\jetbrains\IntelliJ IDEA 171.1834.9\plugins\junit\lib\junit-rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\deploy.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\access-bridge-64.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\cldrdata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\dnsns.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jaccess.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jfxrt.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\localedata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\nashorn.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunec.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunjce_provider.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunmscapi.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunpkcs11.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\zipfs.jar;E:\software\jdk1.8x64\jdk\jre\lib\javaws.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfxswt.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\management-agent.jar;E:\software\jdk1.8x64\jdk\jre\lib\plugin.jar;E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;D:\idea2016WK\out\javaee82017\default\test\JavaEE8Tools2017;D:\idea2016WK\out\javaee82017\default\production\JavaEE8Tools2017;D:\idea2016WK\github\tomcat8x64_idea\lib\jsp-api.jar;D:\idea2016WK\github\tomcat8x64_idea\lib\servlet-api.jar;D:\idea2016WK\github\lib8\antlr-2.7.7.jar;D:\idea2016WK\github\lib8\aspectjweaver-1.8.9.jar;D:\idea2016WK\github\lib8\cdi-api-1.1.jar;D:\idea2016WK\github\lib8\classmate-1.3.0.jar;D:\idea2016WK\github\lib8\commons-logging-1.2.jar;D:\idea2016WK\github\lib8\dom4j-1.6.1.jar;D:\idea2016WK\github\lib8\el-api-2.2.jar;D:\idea2016WK\github\lib8\geronimo-jta_1.1_spec-1.1.1.jar;D:\idea2016WK\github\lib8\hibernate-commons-annotations-5.0.1.Final.jar;D:\idea2016WK\github\lib8\hibernate-core-5.2.5.Final.jar;D:\idea2016WK\github\lib8\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\idea2016WK\github\lib8\jandex-2.0.3.Final.jar;D:\idea2016WK\github\lib8\javassist-3.20.0-GA.jar;D:\idea2016WK\github\lib8\javax.inject-1.jar;D:\idea2016WK\github\lib8\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\idea2016WK\github\lib8\jboss-logging-3.3.0.Final.jar;D:\idea2016WK\github\lib8\jsr250-api-1.0.jar;D:\idea2016WK\github\lib8\jstl-1.2.jar;D:\idea2016WK\github\lib8\spring-aop-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-aspects-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-beans-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-support-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-core-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-expression-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-tomcat-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jdbc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jms-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-messaging-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-orm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-oxm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-test-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-tx-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-web-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-portlet-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-websocket-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\tomcat-servlet-api-8.5.9.jar;D:\idea2016WK\libs\log4j-1.2.17.jar;D:\idea2016WK\libs\junit-4.11.jar;D:\idea2016WK\libs\mysql-connector-java-5.1.35-bin.jar;D:\idea2016WK\libs\slf4j-api-1.7.10.jar;D:\idea2016WK\libs\slf4j-log4j12-1.7.10.jar;D:\idea2016WK\libs\hamcrest-all-1.3.jar;D:\idea2016WK\libs\oracle-driver-ojdbc-12.1.0.2.jar;D:\idea2016WK\out\javaee82017\default\production\javaee8-core;D:\idea2016WK\out\javaee82017\default\production\javaee8-hibernate, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, os.name=Windows 7, java.vm.specification.version=1.8, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=E:\software\jdk1.8x64\jdk\jre\bin, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 qin.javaee8.test.MakeTable, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, idea.launcher.port=8536, java.specification.vendor=Oracle Corporation, java.home=E:\software\jdk1.8x64\jdk\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\sunrsasign.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0-b132, user.name=Administrator, path.separator=;, os.version=6.1, java.endorsed.dirs=E:\software\jdk1.8x64\jdk\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@6d06d69c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, idea.launcher.bin.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\bin, java.version=1.8.0, user.dir=D:\idea2016WK\github\JavaEE8Tools2017, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@c827db, java.library.path=E:\software\jdk1.8x64\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;d:\app\Administrator\product\12.1.0\dbhome_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;E:\software\maven0339\bin;C:\Program Files\TortoiseSVN\bin;E:\software\visual_svn\bin;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\TortoiseGit\bin;D:\xampps\perl\bin\;C:\Program Files\MySQL\MySQL Utilities 1.6\;E:\xampps\perl\bin\;E:\software\ZendServer\ZendServer\share\ZendFramework\bin;E:\software\ZendServer\ZendServer\bin;E:\software\Zend\DB2\BIN;E:\software\Zend\DB2\FUNCTION;C:\Program Files\MySQL\MySQL Server 5.7\bin;E:\software\jdk1.8x64\jdk\bin;C:\Users\Administrator\AppData\Local\atom\bin;E:\software\搜狐影音\5.0.2.23;e:\software\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.0-b70, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@ba2f4ec, java.ext.dirs=E:\software\jdk1.8x64\jdk\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
10:26:59,737 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
10:26:59,751 DEBUG SessionFactoryImpl:294 - Instantiated session factory
10:26:59,990 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.jd.MobileGoods
10:26:59,990 DEBUG AbstractEntityPersister:3549 -  Version select: select id, gname from MobileGoods where id =? and gname =?
10:26:59,991 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select mobilegood_.id, mobilegood_.gname, mobilegood_.price as price3_0_ from MobileGoods mobilegood_ where mobilegood_.id=? and mobilegood_.gname=?
10:26:59,991 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into MobileGoods (price, id, gname) values (?, ?, ?)
10:26:59,992 DEBUG AbstractEntityPersister:394 -  Update 0: update MobileGoods set price=? where id=? and gname=?
10:26:59,992 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from MobileGoods where id=? and gname=?
10:27:00,048 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0a9fa5]
10:27:00,051 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fbfa96]
10:27:00,064 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,064 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,065 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,066 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,108 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,118 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,123 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [NONE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:27:00,124 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185]
10:27:00,124 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c20ffa8]
10:27:00,125 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,127 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,129 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,130 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,131 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,132 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,132 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [READ]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:27:00,133 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4664d7]
10:27:00,134 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@46c00568]
10:27:00,134 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,136 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,136 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,137 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,138 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,139 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,141 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:27:00,141 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bcbf05b]
10:27:00,142 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2d66530f]
10:27:00,144 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,147 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,147 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,148 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,148 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,151 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,153 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_NOWAIT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:27:00,153 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4690f583]
10:27:00,154 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@59712875]
10:27:00,154 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,155 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,155 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,156 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,156 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,157 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,158 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_SKIPLOCKED]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:27:00,182 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1869f114]
10:27:00,183 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@488b50ec]
10:27:00,184 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,184 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,185 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,186 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,187 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,188 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,189 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [FORCE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:27:00,193 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37a64f9d]
10:27:00,194 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@25b865b5]
10:27:00,194 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,194 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,195 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,195 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,196 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,202 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,203 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_READ]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? lock in share mode
10:27:00,205 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2d99fc]
10:27:00,206 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@bdecc21]
10:27:00,207 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,207 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,207 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,208 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,209 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,210 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,211 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_WRITE]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:27:00,211 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201aa8c1]
10:27:00,212 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5d58c727]
10:27:00,212 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,213 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,213 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,214 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,215 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,218 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,218 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_FORCE_INCREMENT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=? for update
10:27:00,219 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f20a5e0]
10:27:00,220 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@54da32dc]
10:27:00,220 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,220 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,221 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,221 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,222 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,223 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,224 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:27:00,225 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b22f74]
10:27:00,225 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22fba58c]
10:27:00,226 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
10:27:00,226 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : gname
10:27:00,226 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
10:27:00,227 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
10:27:00,227 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
10:27:00,231 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_, gname2_0_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

10:27:00,232 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC_FORCE_INCREMENT]: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:27:00,268 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:27:00,269 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.id as id1_0_0_, mobilegood0_.gname as gname2_0_0_, mobilegood0_.price as price3_0_0_ from MobileGoods mobilegood0_ where mobilegood0_.id=? and mobilegood0_.gname=?
10:27:00,407 DEBUG SQL:92 - 
    
    create table MobileGoods (
        id bigint not null,
        gname varchar(255) not null,
        price double precision,
        primary key (id, gname)
    ) ENGINE=InnoDB
10:27:00,553 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
10:27:00,554 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
10:27:00,568 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
10:27:00,571 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
10:27:00,571 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
10:27:00,576 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@388b401d
10:27:00,578 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f043eea0-746b-4c93-a7fa-b52267f3f1bb (<unnamed>)
10:27:00,595 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
10:27:00,738  INFO HibernateTransactionManager:357 - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@ba2f4ec] of Hibernate SessionFactory for HibernateTransactionManager
10:27:01,180 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
10:27:01,194 DEBUG TransactionImpl:55 - begin
13:17:16,800  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:17:16 CST 2017]; root of context hierarchy
13:17:17,026  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:17:18,088  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:17:18,102  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:17:19,146  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:17:19,409 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:17:19,415 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:17:19,421 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:17:19,911  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:17:19,980  INFO Environment:213 - HHH000206: hibernate.properties not found
13:17:20,038 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:17:20,039 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:17:20,049 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:17:20,429 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:17:20,452 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:17:20,453 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:17:20,501 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:17:20,524  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:17:20,562 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:17:20,563 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:17:20,624 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:17:23,525 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
13:17:23,526 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
13:17:23,527 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@463b4ac8
13:17:23,531 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d0d6318
13:17:23,534 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bff34c6
13:17:23,536 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5644dc81
13:17:23,542 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
13:17:23,543 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
13:17:23,543 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c42d2b7
13:17:23,546 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@774698ab
13:17:23,547 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@774698ab
13:17:23,548 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@774698ab
13:17:23,552 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
13:17:23,552 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
13:17:23,553 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b6b1987
13:17:23,556 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@7c541c15
13:17:23,556 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@7c541c15
13:17:23,557 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c541c15
13:17:23,562 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
13:17:23,563 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
13:17:23,563 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c1bd0be
13:17:23,569 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
13:17:23,570 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
13:17:23,570 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ad977d
13:17:23,575 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
13:17:23,576 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
13:17:23,577 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3e4aff
13:17:23,580 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62452cc9
13:17:23,581 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62452cc9
13:17:23,584 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7516e4e5
13:17:23,584 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7516e4e5
13:17:23,588 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3e7634b9
13:17:23,588 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7634b9
13:17:23,591 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@abf688e
13:17:23,594 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@686449f9
13:17:23,598 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@36f48b4
13:17:23,599 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36f48b4
13:17:23,608 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@3f792b9b
13:17:23,609 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f792b9b
13:17:23,641 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@52045dbe
13:17:23,642 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52045dbe
13:17:23,646 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
13:17:23,647 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
13:17:23,652 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4504d271
13:17:23,652 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4504d271
13:17:23,656 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
13:17:23,656 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
13:17:23,659 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
13:17:23,660 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
13:17:23,663 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
13:17:23,664 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
13:17:23,672 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
13:17:23,673 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
13:17:23,677 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@758c83d8
13:17:23,677 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@758c83d8
13:17:23,680 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@58359ebd
13:17:23,681 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58359ebd
13:17:23,683 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee37ca3
13:17:23,684 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee37ca3
13:17:23,685 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee37ca3
13:17:23,689 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b030a0
13:17:23,692 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@56bca85b
13:17:23,693 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56bca85b
13:17:23,693 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56bca85b
13:17:23,696 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d1a32f
13:17:23,698 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40c80397
13:17:23,699 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40c80397
13:17:23,702 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@7c2b6087
13:17:23,702 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c2b6087
13:17:23,705 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b324585
13:17:23,705 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b324585
13:17:23,709 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@5974109
13:17:23,709 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5974109
13:17:23,713 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75f5fd58
13:17:23,714 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75f5fd58
13:17:23,715 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12bcd0c0
13:17:23,718 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@4678a2eb
13:17:23,719 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4678a2eb
13:17:23,719 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@4678a2eb
13:17:23,721 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fdfafd2
13:17:23,722 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fdfafd2
13:17:23,722 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fdfafd2
13:17:23,726 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c87bfe2
13:17:23,728 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@4cc6fa2a
13:17:23,731 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@590c73d3
13:17:23,732 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@590c73d3
13:17:23,732 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@590c73d3
13:17:23,735 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@435871cb
13:17:23,735 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@435871cb
13:17:23,736 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@435871cb
13:17:23,738 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4bef0fe3
13:17:23,740 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@55b5f5d2
13:17:23,752 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2c88b9fc
13:17:23,753 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c88b9fc
13:17:23,755 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47605f2f
13:17:23,765 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@12dae582
13:17:23,766 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dae582
13:17:23,773 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@3c435123
13:17:23,774 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c435123
13:17:23,776 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a8fa663
13:17:23,778 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@546ccad7
13:17:23,782 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4264b240
13:17:23,788 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@30990c1b
13:17:23,789 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30990c1b
13:17:23,791 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dbe250d
13:17:23,792 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@553f1d75
13:17:23,792 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e1d8f9e
13:17:23,793 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e34ace1
13:17:23,794 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62fe6067
13:17:23,794 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f071df8
13:17:23,795 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de41af9
13:17:23,796 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ace400
13:17:24,398 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:17:24,399 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:17:24,400 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:17:24,434  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:17:24,500 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:17:24,504 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:17:24,699 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:17:24,701 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:17:24,703 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:17:24,703 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:17:24,704 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:17:24,708 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:17:24,710 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:17:24,714 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:17:24,717 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:17:24,719 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:17:24,720 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:17:24,721 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:17:24,722 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:17:24,725 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:17:24,862 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:17:24,905 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:17:24,912 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:17:24,912 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:17:24,966 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:17:24,967 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:17:24,968 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:17:24,997 DEBUG ModelBinder:2501 - Mapped property: goods_Type -> []
13:17:24,998 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:17:24,999 DEBUG ModelBinder:2501 - Mapped property: goods_imageMap -> [goods_imageMap]
13:17:25,001 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description, goods_imageMap]
13:17:25,004 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:17:25,006 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:17:25,006 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:17:25,006 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:17:25,007 DEBUG PrimaryKey:35 - Forcing column [goods_imagemap] to be non-null as it is part of the primary key for table [mobilegoods]
13:17:25,010 DEBUG ModelBinder:2501 - Mapped property: tempArgs -> [tempArgs]
13:17:25,014 ERROR AssertionFailure:31 - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: Unable to locate referenced entity mapping [qin.javaee8.jd.GoodsType] in order to process many-to-one FK : qin.javaee8.jd.MobileGoods.pk.goods_Type
13:17:25,018  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is org.hibernate.AssertionFailure: Unable to locate referenced entity mapping [qin.javaee8.jd.GoodsType] in order to process many-to-one FK : qin.javaee8.jd.MobileGoods.pk.goods_Type
13:17:58,770  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:17:58 CST 2017]; root of context hierarchy
13:17:59,007  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:18:00,248  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:18:00,261  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:18:01,206  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:18:01,475 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:18:01,481 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:18:01,502 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:18:02,019  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:18:02,024  INFO Environment:213 - HHH000206: hibernate.properties not found
13:18:02,087 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:18:02,087 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:18:02,096 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:18:02,453 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:18:02,470 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:18:02,470 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:18:02,514 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:18:02,535  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:18:02,566 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:18:02,566 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:18:02,595 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:18:05,213 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
13:18:05,214 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
13:18:05,215 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@463b4ac8
13:18:05,217 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d0d6318
13:18:05,220 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bff34c6
13:18:05,222 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5644dc81
13:18:05,226 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
13:18:05,226 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
13:18:05,227 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c42d2b7
13:18:05,230 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@774698ab
13:18:05,231 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@774698ab
13:18:05,231 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@774698ab
13:18:05,235 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
13:18:05,236 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
13:18:05,236 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b6b1987
13:18:05,238 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@7c541c15
13:18:05,239 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@7c541c15
13:18:05,240 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c541c15
13:18:05,243 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
13:18:05,244 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
13:18:05,244 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c1bd0be
13:18:05,248 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
13:18:05,248 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
13:18:05,249 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ad977d
13:18:05,252 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
13:18:05,254 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
13:18:05,255 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3e4aff
13:18:05,259 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62452cc9
13:18:05,260 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62452cc9
13:18:05,265 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7516e4e5
13:18:05,266 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7516e4e5
13:18:05,269 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3e7634b9
13:18:05,269 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7634b9
13:18:05,272 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@abf688e
13:18:05,275 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@686449f9
13:18:05,277 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@36f48b4
13:18:05,278 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36f48b4
13:18:05,282 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@3f792b9b
13:18:05,282 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f792b9b
13:18:05,318 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@52045dbe
13:18:05,319 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52045dbe
13:18:05,324 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
13:18:05,324 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
13:18:05,329 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4504d271
13:18:05,330 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4504d271
13:18:05,334 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
13:18:05,336 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
13:18:05,339 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
13:18:05,340 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
13:18:05,343 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
13:18:05,344 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
13:18:05,353 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
13:18:05,354 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
13:18:05,358 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@758c83d8
13:18:05,359 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@758c83d8
13:18:05,361 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@58359ebd
13:18:05,362 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58359ebd
13:18:05,365 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee37ca3
13:18:05,366 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee37ca3
13:18:05,367 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee37ca3
13:18:05,370 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b030a0
13:18:05,374 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@56bca85b
13:18:05,375 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56bca85b
13:18:05,376 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56bca85b
13:18:05,378 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d1a32f
13:18:05,381 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40c80397
13:18:05,382 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40c80397
13:18:05,385 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@7c2b6087
13:18:05,385 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c2b6087
13:18:05,388 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b324585
13:18:05,388 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b324585
13:18:05,391 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@5974109
13:18:05,392 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5974109
13:18:05,396 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75f5fd58
13:18:05,397 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75f5fd58
13:18:05,399 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12bcd0c0
13:18:05,403 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@4678a2eb
13:18:05,403 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4678a2eb
13:18:05,404 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@4678a2eb
13:18:05,406 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fdfafd2
13:18:05,407 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fdfafd2
13:18:05,408 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fdfafd2
13:18:05,411 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c87bfe2
13:18:05,413 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@4cc6fa2a
13:18:05,415 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@590c73d3
13:18:05,415 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@590c73d3
13:18:05,416 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@590c73d3
13:18:05,418 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@435871cb
13:18:05,418 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@435871cb
13:18:05,418 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@435871cb
13:18:05,420 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4bef0fe3
13:18:05,422 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@55b5f5d2
13:18:05,430 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2c88b9fc
13:18:05,431 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c88b9fc
13:18:05,433 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47605f2f
13:18:05,442 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@12dae582
13:18:05,443 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dae582
13:18:05,451 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@3c435123
13:18:05,452 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c435123
13:18:05,453 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a8fa663
13:18:05,455 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@546ccad7
13:18:05,458 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4264b240
13:18:05,465 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@30990c1b
13:18:05,466 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30990c1b
13:18:05,467 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dbe250d
13:18:05,468 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@553f1d75
13:18:05,468 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e1d8f9e
13:18:05,469 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e34ace1
13:18:05,469 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62fe6067
13:18:05,469 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f071df8
13:18:05,470 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de41af9
13:18:05,470 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ace400
13:18:06,095 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:18:06,096 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:18:06,097 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:18:06,131  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:18:06,216 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:18:06,219 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:18:06,418 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:18:06,420 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:18:06,422 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:18:06,422 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:18:06,424 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:18:06,430 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:18:06,432 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:18:06,434 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:18:06,437 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:18:06,440 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:18:06,442 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:18:06,444 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:18:06,445 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:18:06,447 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:18:06,568 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:18:06,614 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:18:06,621 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:18:06,621 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:18:06,645 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:18:06,646 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:18:06,647 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:18:06,656 DEBUG ModelBinder:2501 - Mapped property: goods_Type -> []
13:18:06,657 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:18:06,658 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:18:06,664 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:18:06,665 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:18:06,666 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:18:06,666 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:18:06,669 DEBUG ModelBinder:2501 - Mapped property: tempArgs -> [tempArgs]
13:18:06,674 ERROR AssertionFailure:31 - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: Unable to locate referenced entity mapping [qin.javaee8.jd.GoodsType] in order to process many-to-one FK : qin.javaee8.jd.MobileGoods.pk.goods_Type
13:18:06,677  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is org.hibernate.AssertionFailure: Unable to locate referenced entity mapping [qin.javaee8.jd.GoodsType] in order to process many-to-one FK : qin.javaee8.jd.MobileGoods.pk.goods_Type
13:21:05,858  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:21:05 CST 2017]; root of context hierarchy
13:21:06,029  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:21:07,466  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:21:07,480  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:21:08,393  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:21:08,660 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:21:08,667 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:21:08,693 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:21:09,029  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:21:09,034  INFO Environment:213 - HHH000206: hibernate.properties not found
13:21:09,091 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:21:09,091 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:21:09,102 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:21:09,476 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:21:09,492 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:21:09,492 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:21:09,537 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:21:09,571  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:21:09,609 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:21:09,610 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:21:09,643 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:21:12,241 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6804cd
13:21:12,242 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6804cd
13:21:12,242 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c6804cd
13:21:12,245 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eeb318f
13:21:12,248 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18025ced
13:21:12,250 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d2a4eed
13:21:12,253 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@45e37a7e
13:21:12,254 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@45e37a7e
13:21:12,254 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45e37a7e
13:21:12,257 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@1021f6c9
13:21:12,258 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@1021f6c9
13:21:12,258 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1021f6c9
13:21:12,262 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6f0b0a5e
13:21:12,263 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6f0b0a5e
13:21:12,264 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f0b0a5e
13:21:12,267 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@478ee483
13:21:12,268 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@478ee483
13:21:12,268 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@478ee483
13:21:12,274 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@4044fb95
13:21:12,275 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@4044fb95
13:21:12,275 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4044fb95
13:21:12,279 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4b20ca2b
13:21:12,280 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4b20ca2b
13:21:12,280 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b20ca2b
13:21:12,285 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@72758afa
13:21:12,286 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@72758afa
13:21:12,286 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72758afa
13:21:12,290 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40cb698e
13:21:12,291 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40cb698e
13:21:12,294 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a891c97
13:21:12,295 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a891c97
13:21:12,298 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@2313052e
13:21:12,298 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2313052e
13:21:12,301 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52045dbe
13:21:12,303 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73163d48
13:21:12,306 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@62f4ff3b
13:21:12,307 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62f4ff3b
13:21:12,310 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@34997338
13:21:12,311 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34997338
13:21:12,351 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@792bbc74
13:21:12,351 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@792bbc74
13:21:12,355 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@338494fa
13:21:12,356 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@338494fa
13:21:12,361 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@58359ebd
13:21:12,362 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@58359ebd
13:21:12,368 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53812a9b
13:21:12,368 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53812a9b
13:21:12,372 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8305c2
13:21:12,374 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8305c2
13:21:12,380 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@531c311e
13:21:12,381 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@531c311e
13:21:12,396 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5974109
13:21:12,397 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5974109
13:21:12,402 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@5c3b6c6e
13:21:12,403 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5c3b6c6e
13:21:12,411 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@12bcd0c0
13:21:12,412 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12bcd0c0
13:21:12,422 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4678a2eb
13:21:12,422 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4678a2eb
13:21:12,423 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4678a2eb
13:21:12,434 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58ebfd03
13:21:12,437 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d304f9d
13:21:12,438 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d304f9d
13:21:12,439 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d304f9d
13:21:12,445 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fea7088
13:21:12,450 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40f1be1b
13:21:12,451 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40f1be1b
13:21:12,453 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b9ce1bf
13:21:12,454 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b9ce1bf
13:21:12,459 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@609640d5
13:21:12,460 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@609640d5
13:21:12,462 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@62ea3440
13:21:12,463 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62ea3440
13:21:12,466 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16ecee1
13:21:12,467 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16ecee1
13:21:12,469 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a3329b9
13:21:12,476 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@13e3c1c7
13:21:12,477 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@13e3c1c7
13:21:12,477 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@13e3c1c7
13:21:12,481 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:21:12,482 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:21:12,482 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:21:12,486 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@36546a22
13:21:12,488 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@64dafeed
13:21:12,491 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@7894f09b
13:21:12,492 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7894f09b
13:21:12,493 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@7894f09b
13:21:12,496 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b11a194
13:21:12,497 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b11a194
13:21:12,497 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b11a194
13:21:12,499 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@1b065145
13:21:12,501 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@5827af16
13:21:12,512 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@150ab4ed
13:21:12,513 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@150ab4ed
13:21:12,514 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a62c01e
13:21:12,526 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@22d6f11
13:21:12,526 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22d6f11
13:21:12,535 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@5ed731d0
13:21:12,535 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ed731d0
13:21:12,537 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@275fe372
13:21:12,538 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26a4842b
13:21:12,541 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@78fb9a67
13:21:12,548 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@61bcd567
13:21:12,549 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61bcd567
13:21:12,550 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15c25153
13:21:12,551 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1252b961
13:21:12,551 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9ed238c
13:21:12,552 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56276db8
13:21:12,552 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e8e6e6
13:21:12,553 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56f6d40b
13:21:12,553 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36676c1a
13:21:12,553 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b408dc3
13:21:13,468 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:21:13,471 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:21:13,471 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:21:13,509  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:21:13,590 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:21:13,594 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:21:13,767 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:21:13,769 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:21:13,771 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:21:13,772 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:21:13,773 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:21:13,778 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:21:13,780 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:21:13,785 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:21:13,789 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:21:13,791 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:21:13,794 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:21:13,796 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:21:13,797 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:21:13,799 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:21:13,929 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:21:13,978 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:21:13,986 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:21:13,987 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:21:14,011 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:21:14,012 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:21:14,013 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:21:14,025 DEBUG ModelBinder:2501 - Mapped property: goods_Type -> []
13:21:14,026 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:21:14,028 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:21:14,033 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:14,034 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:14,034 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:14,035 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:14,037 DEBUG ModelBinder:2501 - Mapped property: tempArgs -> [tempArgs]
13:21:14,043 ERROR AssertionFailure:31 - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: Unable to locate referenced entity mapping [qin.javaee8.jd.GoodsType] in order to process many-to-one FK : qin.javaee8.jd.MobileGoods.pk.goods_Type
13:21:14,046  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is org.hibernate.AssertionFailure: Unable to locate referenced entity mapping [qin.javaee8.jd.GoodsType] in order to process many-to-one FK : qin.javaee8.jd.MobileGoods.pk.goods_Type
13:21:28,291  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:21:28 CST 2017]; root of context hierarchy
13:21:28,575  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:21:29,989  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:21:30,003  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:21:30,870  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:21:31,051 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:21:31,055 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:21:31,069 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:21:31,649  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:21:31,654  INFO Environment:213 - HHH000206: hibernate.properties not found
13:21:31,703 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:21:31,704 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:21:31,711 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:21:32,118 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:21:32,135 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:21:32,136 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:21:32,189 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:21:32,212  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:21:32,241 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:21:32,242 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:21:32,275 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:21:35,045 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6804cd
13:21:35,046 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6804cd
13:21:35,047 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c6804cd
13:21:35,051 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eeb318f
13:21:35,054 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18025ced
13:21:35,055 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d2a4eed
13:21:35,058 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@45e37a7e
13:21:35,059 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@45e37a7e
13:21:35,060 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45e37a7e
13:21:35,063 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@1021f6c9
13:21:35,063 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@1021f6c9
13:21:35,064 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1021f6c9
13:21:35,067 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6f0b0a5e
13:21:35,068 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6f0b0a5e
13:21:35,069 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f0b0a5e
13:21:35,072 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@478ee483
13:21:35,072 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@478ee483
13:21:35,073 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@478ee483
13:21:35,077 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@4044fb95
13:21:35,077 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@4044fb95
13:21:35,078 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4044fb95
13:21:35,082 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4b20ca2b
13:21:35,084 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4b20ca2b
13:21:35,084 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b20ca2b
13:21:35,087 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@72758afa
13:21:35,088 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@72758afa
13:21:35,088 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72758afa
13:21:35,092 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40cb698e
13:21:35,092 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40cb698e
13:21:35,095 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a891c97
13:21:35,095 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a891c97
13:21:35,098 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@2313052e
13:21:35,099 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2313052e
13:21:35,101 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52045dbe
13:21:35,104 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73163d48
13:21:35,106 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@62f4ff3b
13:21:35,107 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62f4ff3b
13:21:35,110 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@34997338
13:21:35,111 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34997338
13:21:35,145 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@792bbc74
13:21:35,145 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@792bbc74
13:21:35,149 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@338494fa
13:21:35,150 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@338494fa
13:21:35,154 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@58359ebd
13:21:35,155 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@58359ebd
13:21:35,159 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53812a9b
13:21:35,160 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53812a9b
13:21:35,163 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8305c2
13:21:35,164 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8305c2
13:21:35,166 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@531c311e
13:21:35,167 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@531c311e
13:21:35,176 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5974109
13:21:35,176 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5974109
13:21:35,179 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@5c3b6c6e
13:21:35,180 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5c3b6c6e
13:21:35,182 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@12bcd0c0
13:21:35,183 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12bcd0c0
13:21:35,186 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4678a2eb
13:21:35,186 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4678a2eb
13:21:35,187 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4678a2eb
13:21:35,191 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58ebfd03
13:21:35,193 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d304f9d
13:21:35,194 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d304f9d
13:21:35,194 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d304f9d
13:21:35,195 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fea7088
13:21:35,197 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40f1be1b
13:21:35,197 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40f1be1b
13:21:35,199 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b9ce1bf
13:21:35,199 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b9ce1bf
13:21:35,201 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@609640d5
13:21:35,202 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@609640d5
13:21:35,204 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@62ea3440
13:21:35,205 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62ea3440
13:21:35,208 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16ecee1
13:21:35,209 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16ecee1
13:21:35,210 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a3329b9
13:21:35,212 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@13e3c1c7
13:21:35,213 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@13e3c1c7
13:21:35,213 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@13e3c1c7
13:21:35,215 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:21:35,216 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:21:35,217 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:21:35,220 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@36546a22
13:21:35,222 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@64dafeed
13:21:35,225 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@7894f09b
13:21:35,225 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7894f09b
13:21:35,226 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@7894f09b
13:21:35,228 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b11a194
13:21:35,228 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b11a194
13:21:35,229 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b11a194
13:21:35,230 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@1b065145
13:21:35,233 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@5827af16
13:21:35,241 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@150ab4ed
13:21:35,243 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@150ab4ed
13:21:35,245 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a62c01e
13:21:35,256 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@22d6f11
13:21:35,257 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22d6f11
13:21:35,267 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@5ed731d0
13:21:35,268 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ed731d0
13:21:35,269 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@275fe372
13:21:35,271 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26a4842b
13:21:35,274 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@78fb9a67
13:21:35,298 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@61bcd567
13:21:35,299 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61bcd567
13:21:35,301 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15c25153
13:21:35,302 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1252b961
13:21:35,302 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9ed238c
13:21:35,303 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56276db8
13:21:35,303 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e8e6e6
13:21:35,305 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56f6d40b
13:21:35,305 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36676c1a
13:21:35,306 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b408dc3
13:21:35,980 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:21:35,981 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:21:35,982 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:21:36,011  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:21:36,091 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:21:36,095 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:21:36,280 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:21:36,281 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:21:36,283 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:21:36,284 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:21:36,286 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:21:36,288 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:21:36,290 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:21:36,294 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:21:36,296 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:21:36,298 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:21:36,299 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:21:36,301 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:21:36,302 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:21:36,304 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:21:36,432 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:21:36,488 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:21:36,496 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:21:36,497 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:21:36,523 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:21:36,525 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:21:36,527 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:21:36,535 DEBUG ModelBinder:2501 - Mapped property: goods_Type -> []
13:21:36,536 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:21:36,538 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:21:36,541 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:36,542 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:36,542 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:36,542 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:21:36,545 DEBUG ModelBinder:2501 - Mapped property: tempArgs -> [tempArgs]
13:21:36,564 DEBUG AnnotationBinder:511 - Binding entity from annotated class: qin.javaee8.jd.GoodsType
13:21:36,630 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13:21:36,645 DEBUG EntityBinder:414 - Import with entity name GoodsType
13:21:36,659 DEBUG EntityBinder:690 - Bind entity qin.javaee8.jd.GoodsType on table GoodsType
13:21:36,996 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=gook_pk, insertable=true, updatable=true, unique=false}
13:21:37,004 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
13:21:37,010 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:id]
13:21:37,013 DEBUG SimpleValueBinder:411 - building SimpleValue for id
13:21:37,014 DEBUG PropertyBinder:265 - Building property id
13:21:37,023 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:21:37,025 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet, insertable=true, updatable=true, unique=false}
13:21:37,028 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:21:37,060 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:21:37,062 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet_KEY, insertable=true, updatable=true, unique=false}
13:21:37,064 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='childrenSet_KEY', referencedColumn='null', mappedBy='null'}
13:21:37,080 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_childrenSet', referencedColumn='', mappedBy=''}
13:21:37,081 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:21:37,082 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.childrenSet
13:21:37,088 DEBUG PropertyBinder:265 - Building property childrenSet
13:21:37,089 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSetId', referencedColumn='', mappedBy=''}
13:21:37,090 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goodsPKSet, insertable=true, updatable=true, unique=false}
13:21:37,093 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:21:37,094 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:21:37,094 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goodsPKSet_KEY, insertable=true, updatable=true, unique=false}
13:21:37,102 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsPKSet_KEY', referencedColumn='null', mappedBy='null'}
13:21:37,103 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:21:37,104 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:21:37,104 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.goodsPKSet
13:21:37,106 DEBUG PropertyBinder:265 - Building property goodsPKSet
13:21:37,108 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeDescription, insertable=true, updatable=true, unique=false}
13:21:37,109 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeDescription with lazy=false
13:21:37,109 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeDescription]
13:21:37,110 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeDescription
13:21:37,112 DEBUG PropertyBinder:265 - Building property goods_typeDescription
13:21:37,113 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeName, insertable=true, updatable=true, unique=false}
13:21:37,113 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeName with lazy=false
13:21:37,113 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeName]
13:21:37,114 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeName
13:21:37,114 DEBUG PropertyBinder:265 - Building property goods_typeName
13:21:37,116 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_parentId', referencedColumn='', mappedBy=''}
13:21:37,117 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=parentGoodsType, insertable=true, updatable=true, unique=false}
13:21:37,135 DEBUG PropertyBinder:265 - Building property parentGoodsType
13:21:37,143  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
13:23:12,287  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:23:12 CST 2017]; root of context hierarchy
13:23:12,506  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:23:13,716  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:23:13,729  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:23:14,823  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:23:15,071 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:23:15,077 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:23:15,087 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:23:15,670  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:23:15,676  INFO Environment:213 - HHH000206: hibernate.properties not found
13:23:15,841 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:23:15,843 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:23:15,861 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:23:16,362 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:23:16,379 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:23:16,380 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:23:16,440 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:23:16,467  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:23:16,502 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:23:16,503 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:23:16,593 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:23:19,059 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6804cd
13:23:19,060 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6804cd
13:23:19,061 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c6804cd
13:23:19,063 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3eeb318f
13:23:19,068 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18025ced
13:23:19,070 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d2a4eed
13:23:19,076 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@45e37a7e
13:23:19,076 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@45e37a7e
13:23:19,080 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45e37a7e
13:23:19,084 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@1021f6c9
13:23:19,084 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@1021f6c9
13:23:19,085 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1021f6c9
13:23:19,089 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6f0b0a5e
13:23:19,090 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6f0b0a5e
13:23:19,092 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f0b0a5e
13:23:19,095 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@478ee483
13:23:19,098 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@478ee483
13:23:19,098 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@478ee483
13:23:19,110 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@4044fb95
13:23:19,112 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@4044fb95
13:23:19,118 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4044fb95
13:23:19,127 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4b20ca2b
13:23:19,128 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4b20ca2b
13:23:19,129 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b20ca2b
13:23:19,138 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@72758afa
13:23:19,140 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@72758afa
13:23:19,141 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72758afa
13:23:19,147 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40cb698e
13:23:19,148 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40cb698e
13:23:19,153 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4a891c97
13:23:19,153 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4a891c97
13:23:19,162 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@2313052e
13:23:19,164 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2313052e
13:23:19,173 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52045dbe
13:23:19,175 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73163d48
13:23:19,178 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@62f4ff3b
13:23:19,178 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62f4ff3b
13:23:19,186 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@34997338
13:23:19,187 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34997338
13:23:19,231 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@792bbc74
13:23:19,232 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@792bbc74
13:23:19,240 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@338494fa
13:23:19,241 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@338494fa
13:23:19,245 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@58359ebd
13:23:19,246 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@58359ebd
13:23:19,252 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53812a9b
13:23:19,253 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53812a9b
13:23:19,257 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8305c2
13:23:19,257 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d8305c2
13:23:19,261 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@531c311e
13:23:19,261 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@531c311e
13:23:19,272 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5974109
13:23:19,273 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5974109
13:23:19,280 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@5c3b6c6e
13:23:19,281 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5c3b6c6e
13:23:19,284 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@12bcd0c0
13:23:19,285 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12bcd0c0
13:23:19,288 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4678a2eb
13:23:19,289 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4678a2eb
13:23:19,290 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4678a2eb
13:23:19,296 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58ebfd03
13:23:19,301 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d304f9d
13:23:19,301 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d304f9d
13:23:19,302 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d304f9d
13:23:19,304 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fea7088
13:23:19,306 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40f1be1b
13:23:19,307 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40f1be1b
13:23:19,310 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b9ce1bf
13:23:19,311 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b9ce1bf
13:23:19,316 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@609640d5
13:23:19,317 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@609640d5
13:23:19,322 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@62ea3440
13:23:19,323 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62ea3440
13:23:19,326 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16ecee1
13:23:19,326 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16ecee1
13:23:19,330 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a3329b9
13:23:19,335 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@13e3c1c7
13:23:19,337 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@13e3c1c7
13:23:19,338 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@13e3c1c7
13:23:19,343 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:23:19,343 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:23:19,344 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b40ceb
13:23:19,348 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@36546a22
13:23:19,351 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@64dafeed
13:23:19,354 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@7894f09b
13:23:19,356 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7894f09b
13:23:19,359 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@7894f09b
13:23:19,362 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b11a194
13:23:19,363 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b11a194
13:23:19,363 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b11a194
13:23:19,366 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@1b065145
13:23:19,368 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@5827af16
13:23:19,384 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@150ab4ed
13:23:19,384 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@150ab4ed
13:23:19,386 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a62c01e
13:23:19,402 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@22d6f11
13:23:19,403 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22d6f11
13:23:19,414 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@5ed731d0
13:23:19,414 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ed731d0
13:23:19,416 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@275fe372
13:23:19,417 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26a4842b
13:23:19,422 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@78fb9a67
13:23:19,431 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@61bcd567
13:23:19,432 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61bcd567
13:23:19,434 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15c25153
13:23:19,435 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1252b961
13:23:19,435 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9ed238c
13:23:19,436 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56276db8
13:23:19,436 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e8e6e6
13:23:19,437 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56f6d40b
13:23:19,438 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36676c1a
13:23:19,438 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b408dc3
13:23:20,043 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:23:20,044 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:23:20,044 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:23:20,071  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:23:20,148 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:23:20,151 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:23:20,324 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:23:20,325 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:23:20,328 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:23:20,328 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:23:20,330 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:23:20,340 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:23:20,342 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:23:20,348 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:23:20,350 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:23:20,352 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:23:20,354 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:23:20,356 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:23:20,356 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:23:20,359 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:23:20,483 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:23:20,539 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:23:20,547 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:23:20,548 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:23:20,566 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:23:20,567 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:23:20,569 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:23:20,579 DEBUG ModelBinder:2501 - Mapped property: goods_Type -> []
13:23:20,580 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:23:20,582 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:23:20,588 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:23:20,588 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:23:20,589 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:23:20,589 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:23:20,591 DEBUG ModelBinder:2501 - Mapped property: tempArgs -> [tempArgs]
13:23:20,601 DEBUG AnnotationBinder:511 - Binding entity from annotated class: qin.javaee8.jd.GoodsType
13:23:20,642 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13:23:20,954 DEBUG EntityBinder:414 - Import with entity name GoodsType
13:23:20,968 DEBUG EntityBinder:690 - Bind entity qin.javaee8.jd.GoodsType on table GoodsType
13:23:21,023 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=gook_pk, insertable=true, updatable=true, unique=false}
13:23:21,039 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
13:23:21,046 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:id]
13:23:21,050 DEBUG SimpleValueBinder:411 - building SimpleValue for id
13:23:21,051 DEBUG PropertyBinder:265 - Building property id
13:23:21,066 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:23:21,068 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet, insertable=true, updatable=true, unique=false}
13:23:21,073 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:23:21,099 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:23:21,114 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet_KEY, insertable=true, updatable=true, unique=false}
13:23:21,122 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='childrenSet_KEY', referencedColumn='null', mappedBy='null'}
13:23:21,125 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_childrenSet', referencedColumn='', mappedBy=''}
13:23:21,126 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:23:21,128 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.childrenSet
13:23:21,134 DEBUG PropertyBinder:265 - Building property childrenSet
13:23:21,135 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSetId', referencedColumn='', mappedBy=''}
13:23:21,137 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goodsPKSet, insertable=true, updatable=true, unique=false}
13:23:21,141 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:23:21,142 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:23:21,142 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goodsPKSet_KEY, insertable=true, updatable=true, unique=false}
13:23:21,144 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsPKSet_KEY', referencedColumn='null', mappedBy='null'}
13:23:21,145 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:23:21,145 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:23:21,146 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.goodsPKSet
13:23:21,149 DEBUG PropertyBinder:265 - Building property goodsPKSet
13:23:21,150 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeDescription, insertable=true, updatable=true, unique=false}
13:23:21,151 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeDescription with lazy=false
13:23:21,151 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeDescription]
13:23:21,152 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeDescription
13:23:21,154 DEBUG PropertyBinder:265 - Building property goods_typeDescription
13:23:21,155 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeName, insertable=true, updatable=true, unique=false}
13:23:21,156 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeName with lazy=false
13:23:21,156 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeName]
13:23:21,158 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeName
13:23:21,158 DEBUG PropertyBinder:265 - Building property goods_typeName
13:23:21,159 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_parentId', referencedColumn='', mappedBy=''}
13:23:21,160 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=parentGoodsType, insertable=true, updatable=true, unique=false}
13:23:21,164 DEBUG PropertyBinder:265 - Building property parentGoodsType
13:23:21,173  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
13:24:32,126  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:24:32 CST 2017]; root of context hierarchy
13:24:32,409  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:24:34,454  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:24:34,471  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:24:35,325  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:24:35,496 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:24:35,501 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:24:35,508 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:24:35,804  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:24:35,807  INFO Environment:213 - HHH000206: hibernate.properties not found
13:24:35,847 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:24:35,847 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:24:35,853 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:24:36,185 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:24:36,199 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:24:36,200 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:24:36,242 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:24:36,263  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:24:36,308 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:24:36,309 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:24:36,375 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:24:38,681 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@476b0ae6
13:24:38,682 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@476b0ae6
13:24:38,683 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@476b0ae6
13:24:38,684 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17a87e37
13:24:38,688 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@75b25825
13:24:38,690 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a3e4aff
13:24:38,693 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@7e22550a
13:24:38,694 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@7e22550a
13:24:38,695 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e22550a
13:24:38,697 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@5bc9ba1d
13:24:38,698 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@5bc9ba1d
13:24:38,699 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bc9ba1d
13:24:38,702 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@3e7634b9
13:24:38,702 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@3e7634b9
13:24:38,703 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e7634b9
13:24:38,705 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@abf688e
13:24:38,706 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@abf688e
13:24:38,706 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@abf688e
13:24:38,709 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@68b6f0d6
13:24:38,710 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@68b6f0d6
13:24:38,710 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@68b6f0d6
13:24:38,713 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@7b8233cd
13:24:38,714 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@7b8233cd
13:24:38,714 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b8233cd
13:24:38,717 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@25b2cfcb
13:24:38,719 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@25b2cfcb
13:24:38,719 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@25b2cfcb
13:24:38,722 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dd91bca
13:24:38,723 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dd91bca
13:24:38,726 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6eeade6c
13:24:38,726 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6eeade6c
13:24:38,729 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@7756c3cd
13:24:38,730 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7756c3cd
13:24:38,732 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6cfcd46d
13:24:38,735 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26425897
13:24:38,738 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@20a8a64e
13:24:38,738 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@20a8a64e
13:24:38,742 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@65b3a85a
13:24:38,743 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@65b3a85a
13:24:38,782 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@a776e
13:24:38,783 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@a776e
13:24:38,786 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6821ea29
13:24:38,788 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6821ea29
13:24:38,792 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10993713
13:24:38,793 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10993713
13:24:38,797 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@45c8d09f
13:24:38,798 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@45c8d09f
13:24:38,801 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18230356
13:24:38,802 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18230356
13:24:38,805 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60d1a32f
13:24:38,806 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60d1a32f
13:24:38,820 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@fd8294b
13:24:38,820 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@fd8294b
13:24:38,824 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@7446d8d5
13:24:38,825 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7446d8d5
13:24:38,828 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@306851c7
13:24:38,829 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@306851c7
13:24:38,834 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@41813449
13:24:38,836 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@41813449
13:24:38,836 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@41813449
13:24:38,841 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1080b026
13:24:38,845 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@dcfda20
13:24:38,847 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dcfda20
13:24:38,847 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dcfda20
13:24:38,854 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c87bfe2
13:24:38,860 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@4cc6fa2a
13:24:38,861 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4cc6fa2a
13:24:38,865 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@590c73d3
13:24:38,866 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@590c73d3
13:24:38,868 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@435871cb
13:24:38,869 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@435871cb
13:24:38,871 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@4bef0fe3
13:24:38,872 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4bef0fe3
13:24:38,876 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@efde75f
13:24:38,877 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@efde75f
13:24:38,880 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b95e48b
13:24:38,887 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@41925502
13:24:38,894 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@41925502
13:24:38,895 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@41925502
13:24:38,899 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@618c5d94
13:24:38,900 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@618c5d94
13:24:38,900 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@618c5d94
13:24:38,938 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b956878
13:24:38,954 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@2c88b9fc
13:24:38,960 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@1dd0e7c4
13:24:38,960 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1dd0e7c4
13:24:38,961 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@1dd0e7c4
13:24:38,964 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@242aa8d9
13:24:38,965 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@242aa8d9
13:24:38,965 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@242aa8d9
13:24:38,968 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4721d212
13:24:38,970 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@62dae540
13:24:38,983 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@a8c1f44
13:24:38,984 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a8c1f44
13:24:38,985 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50fe837a
13:24:38,997 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@15eebbff
13:24:38,997 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15eebbff
13:24:39,005 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@269f4bad
13:24:39,005 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@269f4bad
13:24:39,007 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7bc10d84
13:24:39,009 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@557a1e2d
13:24:39,013 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4b3c354a
13:24:39,024 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@72445aba
13:24:39,025 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72445aba
13:24:39,026 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@458342d3
13:24:39,027 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15c25153
13:24:39,028 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1252b961
13:24:39,028 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9ed238c
13:24:39,028 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@56276db8
13:24:39,029 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51e8e6e6
13:24:39,029 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56f6d40b
13:24:39,030 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36676c1a
13:24:39,766 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:24:39,767 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:24:39,767 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:24:39,805  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:24:39,888 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:24:39,892 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:24:40,066 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:24:40,069 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:24:40,072 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:24:40,072 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:24:40,075 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:24:40,078 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:24:40,080 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:24:40,083 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:24:40,086 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:24:40,088 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:24:40,090 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:24:40,091 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:24:40,092 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:24:40,095 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:24:40,308 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:24:40,402 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:24:40,410 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:24:40,410 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:24:40,438 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:24:40,439 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:24:40,440 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:24:40,441 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:24:40,443 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:24:40,449 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:24:40,450 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:24:40,450 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:24:40,450 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:24:40,454 DEBUG ModelBinder:2501 - Mapped property: tempArgs -> [tempArgs]
13:24:40,462 DEBUG AnnotationBinder:511 - Binding entity from annotated class: qin.javaee8.jd.GoodsType
13:24:40,515 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13:24:40,526 DEBUG EntityBinder:414 - Import with entity name GoodsType
13:24:40,540 DEBUG EntityBinder:690 - Bind entity qin.javaee8.jd.GoodsType on table GoodsType
13:24:40,978 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=gook_pk, insertable=true, updatable=true, unique=false}
13:24:40,989 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
13:24:40,994 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:id]
13:24:40,997 DEBUG SimpleValueBinder:411 - building SimpleValue for id
13:24:40,998 DEBUG PropertyBinder:265 - Building property id
13:24:41,015 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:24:41,018 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet, insertable=true, updatable=true, unique=false}
13:24:41,021 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:24:41,055 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:24:41,057 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet_KEY, insertable=true, updatable=true, unique=false}
13:24:41,060 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='childrenSet_KEY', referencedColumn='null', mappedBy='null'}
13:24:41,062 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_childrenSet', referencedColumn='', mappedBy=''}
13:24:41,063 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:24:41,067 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.childrenSet
13:24:41,075 DEBUG PropertyBinder:265 - Building property childrenSet
13:24:41,076 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeDescription, insertable=true, updatable=true, unique=false}
13:24:41,077 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeDescription with lazy=false
13:24:41,078 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeDescription]
13:24:41,078 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeDescription
13:24:41,080 DEBUG PropertyBinder:265 - Building property goods_typeDescription
13:24:41,081 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeName, insertable=true, updatable=true, unique=false}
13:24:41,081 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeName with lazy=false
13:24:41,082 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeName]
13:24:41,083 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeName
13:24:41,084 DEBUG PropertyBinder:265 - Building property goods_typeName
13:24:41,085 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_parentId', referencedColumn='', mappedBy=''}
13:24:41,085 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=parentGoodsType, insertable=true, updatable=true, unique=false}
13:24:41,091 DEBUG PropertyBinder:265 - Building property parentGoodsType
13:24:41,095 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
13:24:41,096 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for goods_typeDescription
13:24:41,096 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for goods_typeName
13:24:41,104 DEBUG PrimaryKey:35 - Forcing column [gook_pk] to be non-null as it is part of the primary key for table [goodstype]
13:24:41,105 DEBUG CollectionSecondPass:51 - Second pass for collection: qin.javaee8.jd.GoodsType.childrenSet
13:24:41,105 DEBUG CollectionBinder:1207 - Binding a OneToMany: qin.javaee8.jd.GoodsType.childrenSet through an association table
13:24:41,160 DEBUG PrimaryKey:35 - Forcing column [goodstype_childrenset] to be non-null as it is part of the primary key for table [goodstype_childrenset]
13:24:41,160 DEBUG PrimaryKey:35 - Forcing column [childrenset_gook_pk] to be non-null as it is part of the primary key for table [goodstype_childrenset]
13:24:41,161 DEBUG CollectionSecondPass:68 - Mapped collection key: goodsType_childrenSet, element: childrenSet_gook_pk
13:24:41,162 DEBUG InFlightMetadataCollectorImpl:1798 - Resolving reference to class: qin.javaee8.jd.GoodsType
13:24:41,162 DEBUG InFlightMetadataCollectorImpl:1798 - Resolving reference to class: qin.javaee8.jd.GoodsType
13:24:41,169 DEBUG InFlightMetadataCollectorImpl:1798 - Resolving reference to class: qin.javaee8.jd.GoodsType
13:24:41,171 DEBUG InFlightMetadataCollectorImpl:1798 - Resolving reference to class: qin.javaee8.jd.GoodsType
13:24:41,172 DEBUG InFlightMetadataCollectorImpl:1798 - Resolving reference to class: qin.javaee8.jd.GoodsType
13:24:41,172 DEBUG InFlightMetadataCollectorImpl:1798 - Resolving reference to class: qin.javaee8.jd.GoodsType
13:24:41,296 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.jd.MobileGoods] is safe
13:24:41,297 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.jd.MobileGoods
13:24:41,421  WARN RootClass:285 - HHH000038: Composite-id class does not override equals(): qin.javaee8.jd.GoodsPK
13:24:41,450 DEBUG SessionFactoryImpl:199 - Building session factory
13:24:41,453 DEBUG Settings:69 - SessionFactory name : null
13:24:41,453 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
13:24:41,453 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
13:24:41,454 DEBUG Settings:73 - Statistics: disabled
13:24:41,454 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
13:24:41,455 DEBUG Settings:76 - Default entity-mode: pojo
13:24:41,455 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
13:24:41,456 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
13:24:41,457 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
13:24:41,457 DEBUG Settings:81 - Default batch fetch size: -1
13:24:41,457 DEBUG Settings:82 - Maximum outer join fetch depth: 2
13:24:41,458 DEBUG Settings:83 - Default null ordering: NONE
13:24:41,458 DEBUG Settings:84 - Order SQL updates by primary key: disabled
13:24:41,458 DEBUG Settings:85 - Order SQL inserts for batching: disabled
13:24:41,459 DEBUG Settings:87 - multi-tenancy strategy : NONE
13:24:41,459 DEBUG Settings:89 - JTA Track by Thread: enabled
13:24:41,459 DEBUG Settings:91 - Query language substitutions: {}
13:24:41,460 DEBUG Settings:92 - JPA query language strict compliance: disabled
13:24:41,460 DEBUG Settings:93 - Named query checking : enabled
13:24:41,460 DEBUG Settings:95 - Second-level cache: enabled
13:24:41,461 DEBUG Settings:96 - Second-level query cache: disabled
13:24:41,461 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@17ca8b92
13:24:41,461 DEBUG Settings:98 - Second-level cache region prefix: null
13:24:41,461 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
13:24:41,462 DEBUG Settings:100 - Structured second-level cache entries: disabled
13:24:41,462 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
13:24:41,462 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
13:24:41,463 DEBUG Settings:104 - JDBC batch size: 15
13:24:41,463 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
13:24:41,463 DEBUG Settings:106 - Scrollable result sets: enabled
13:24:41,464 DEBUG Settings:107 - Wrap result sets: disabled
13:24:41,464 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
13:24:41,464 DEBUG Settings:109 - JDBC result set fetch size: null
13:24:41,464 DEBUG Settings:110 - Connection release mode: ON_CLOSE
13:24:41,465 DEBUG Settings:111 - Generate SQL with comments: disabled
13:24:41,653 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
13:24:41,655 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\lib\idea_rt.jar;E:\software\jetbrains\IntelliJ IDEA 171.1834.9\plugins\junit\lib\junit-rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\deploy.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\access-bridge-64.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\cldrdata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\dnsns.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jaccess.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jfxrt.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\localedata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\nashorn.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunec.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunjce_provider.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunmscapi.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunpkcs11.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\zipfs.jar;E:\software\jdk1.8x64\jdk\jre\lib\javaws.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfxswt.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\management-agent.jar;E:\software\jdk1.8x64\jdk\jre\lib\plugin.jar;E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;D:\idea2016WK\out\javaee82017\default\test\JavaEE8Tools2017;D:\idea2016WK\out\javaee82017\default\production\JavaEE8Tools2017;D:\idea2016WK\github\tomcat8x64_idea\lib\jsp-api.jar;D:\idea2016WK\github\tomcat8x64_idea\lib\servlet-api.jar;D:\idea2016WK\github\lib8\antlr-2.7.7.jar;D:\idea2016WK\github\lib8\aspectjweaver-1.8.9.jar;D:\idea2016WK\github\lib8\cdi-api-1.1.jar;D:\idea2016WK\github\lib8\classmate-1.3.0.jar;D:\idea2016WK\github\lib8\commons-logging-1.2.jar;D:\idea2016WK\github\lib8\dom4j-1.6.1.jar;D:\idea2016WK\github\lib8\el-api-2.2.jar;D:\idea2016WK\github\lib8\geronimo-jta_1.1_spec-1.1.1.jar;D:\idea2016WK\github\lib8\hibernate-commons-annotations-5.0.1.Final.jar;D:\idea2016WK\github\lib8\hibernate-core-5.2.5.Final.jar;D:\idea2016WK\github\lib8\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\idea2016WK\github\lib8\jandex-2.0.3.Final.jar;D:\idea2016WK\github\lib8\javassist-3.20.0-GA.jar;D:\idea2016WK\github\lib8\javax.inject-1.jar;D:\idea2016WK\github\lib8\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\idea2016WK\github\lib8\jboss-logging-3.3.0.Final.jar;D:\idea2016WK\github\lib8\jsr250-api-1.0.jar;D:\idea2016WK\github\lib8\jstl-1.2.jar;D:\idea2016WK\github\lib8\spring-aop-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-aspects-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-beans-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-support-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-core-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-expression-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-tomcat-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jdbc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jms-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-messaging-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-orm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-oxm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-test-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-tx-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-web-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-portlet-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-websocket-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\tomcat-servlet-api-8.5.9.jar;D:\idea2016WK\libs\log4j-1.2.17.jar;D:\idea2016WK\libs\junit-4.11.jar;D:\idea2016WK\libs\mysql-connector-java-5.1.35-bin.jar;D:\idea2016WK\libs\slf4j-api-1.7.10.jar;D:\idea2016WK\libs\slf4j-log4j12-1.7.10.jar;D:\idea2016WK\libs\hamcrest-all-1.3.jar;D:\idea2016WK\libs\oracle-driver-ojdbc-12.1.0.2.jar;D:\idea2016WK\out\javaee82017\default\production\javaee8-core;D:\idea2016WK\out\javaee82017\default\production\javaee8-hibernate, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, os.name=Windows 7, java.vm.specification.version=1.8, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=E:\software\jdk1.8x64\jdk\jre\bin, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 qin.javaee8.test.MakeTable, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, idea.launcher.port=19644, java.specification.vendor=Oracle Corporation, java.home=E:\software\jdk1.8x64\jdk\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\sunrsasign.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0-b132, user.name=Administrator, path.separator=;, os.version=6.1, java.endorsed.dirs=E:\software\jdk1.8x64\jdk\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@6d06d69c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, idea.launcher.bin.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\bin, java.version=1.8.0, user.dir=D:\idea2016WK\github\JavaEE8Tools2017, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5972d253, java.library.path=E:\software\jdk1.8x64\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;d:\app\Administrator\product\12.1.0\dbhome_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;E:\software\maven0339\bin;C:\Program Files\TortoiseSVN\bin;E:\software\visual_svn\bin;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\TortoiseGit\bin;D:\xampps\perl\bin\;C:\Program Files\MySQL\MySQL Utilities 1.6\;E:\xampps\perl\bin\;E:\software\ZendServer\ZendServer\share\ZendFramework\bin;E:\software\ZendServer\ZendServer\bin;E:\software\Zend\DB2\BIN;E:\software\Zend\DB2\FUNCTION;C:\Program Files\MySQL\MySQL Server 5.7\bin;E:\software\jdk1.8x64\jdk\bin;C:\Users\Administrator\AppData\Local\atom\bin;E:\software\搜狐影音\5.0.2.23;e:\software\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.0-b70, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6200f9cb, java.ext.dirs=E:\software\jdk1.8x64\jdk\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
13:24:41,702 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
13:24:41,744 DEBUG SessionFactoryImpl:294 - Instantiated session factory
13:24:41,931 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.jd.GoodsType] is safe
13:24:41,931 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.jd.GoodsType
13:24:42,007 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.jd.GoodsType] is safe
13:24:42,008 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.jd.GoodsType
13:24:42,290 DEBUG AbstractCollectionPersister:670 - Static SQL for collection: qin.javaee8.jd.GoodsType.childrenSet
13:24:42,290 DEBUG AbstractCollectionPersister:672 -  Row insert: insert into goodstype_childrenSet (goodsType_childrenSet, childrenSet_gook_pk) values (?, ?)
13:24:42,291 DEBUG AbstractCollectionPersister:675 -  Row update: update goodstype_childrenSet set childrenSet_gook_pk=? where goodsType_childrenSet=? and childrenSet_gook_pk=?
13:24:42,291 DEBUG AbstractCollectionPersister:678 -  Row delete: delete from goodstype_childrenSet where goodsType_childrenSet=? and childrenSet_gook_pk=?
13:24:42,292 DEBUG AbstractCollectionPersister:681 -  One-shot delete: delete from goodstype_childrenSet where goodsType_childrenSet=?
13:24:42,301 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.jd.GoodsType
13:24:42,301 DEBUG AbstractEntityPersister:3549 -  Version select: select gook_pk from GoodsType where gook_pk =?
13:24:42,301 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select goodstype_.gook_pk, goodstype_.goods_typeDescription as goods_ty2_0_, goodstype_.goods_typeName as goods_ty3_0_, goodstype_.goodsType_parentId as goodsTyp4_0_ from GoodsType goodstype_ where goodstype_.gook_pk=?
13:24:42,302 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into GoodsType (goods_typeDescription, goods_typeName, goodsType_parentId, gook_pk) values (?, ?, ?, ?)
13:24:42,302 DEBUG AbstractEntityPersister:394 -  Update 0: update GoodsType set goods_typeDescription=?, goods_typeName=?, goodsType_parentId=? where gook_pk=?
13:24:42,302 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from GoodsType where gook_pk=?
13:24:42,360 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa76c61]
13:24:42,363 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,376 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b36e000]
13:24:42,385 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb19dba]
13:24:42,391 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.childrenSet
13:24:42,392 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet.childrenSet
13:24:42,393 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.goods_typeDescription
13:24:42,393 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.goods_typeName
13:24:42,393 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType
13:24:42,397 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6293e39e]
13:24:42,402 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.childrenSet
13:24:42,402 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet.parentGoodsType.childrenSet
13:24:42,403 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.goods_typeDescription
13:24:42,403 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.goods_typeName
13:24:42,403 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.parentGoodsType
13:24:42,404 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet.parentGoodsType.parentGoodsType
13:24:42,404 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,405 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,405 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,405 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : parentGoodsType
13:24:42,407 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,439 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,456 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
                - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}
          - JOIN (JoinDefinedByMetadata(childrenSet)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=qin.javaee8.jd.GoodsType.childrenSet)
                - SQL table alias mapping - childrense1_
                - alias suffix - 1_
                - suffixed key columns - {goodsTyp1_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - gook_pk1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=qin.javaee8.jd.GoodsType)
                      - SQL table alias mapping - goodstype2_
                      - alias suffix - 2_
                      - suffixed key columns - {gook_pk1_0_2_}
                      - JOIN (JoinDefinedByMetadata(parentGoodsType)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=qin.javaee8.jd.GoodsType)
                            - SQL table alias mapping - goodstype3_
                            - alias suffix - 3_
                            - suffixed key columns - {gook_pk1_0_3_}

13:24:42,462 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [NONE]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_, childrense1_.goodsType_childrenSet as goodsTyp1_1_1_, goodstype2_.gook_pk as children2_1_1_, goodstype2_.gook_pk as gook_pk1_0_2_, goodstype2_.goods_typeDescription as goods_ty2_0_2_, goodstype2_.goods_typeName as goods_ty3_0_2_, goodstype2_.goodsType_parentId as goodsTyp4_0_2_, goodstype3_.gook_pk as gook_pk1_0_3_, goodstype3_.goods_typeDescription as goods_ty2_0_3_, goodstype3_.goods_typeName as goods_ty3_0_3_, goodstype3_.goodsType_parentId as goodsTyp4_0_3_ from GoodsType goodstype0_ left outer join goodstype_childrenSet childrense1_ on goodstype0_.gook_pk=childrense1_.goodsType_childrenSet left outer join GoodsType goodstype2_ on childrense1_.childrenSet_gook_pk=goodstype2_.gook_pk left outer join GoodsType goodstype3_ on goodstype2_.goodsType_parentId=goodstype3_.gook_pk where goodstype0_.gook_pk=?
13:24:42,462 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ade133]
13:24:42,463 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,463 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c6a6c1d]
13:24:42,464 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36dfbdaf]
13:24:42,464 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.childrenSet
13:24:42,465 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet.childrenSet
13:24:42,465 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.goods_typeDescription
13:24:42,465 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.goods_typeName
13:24:42,466 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType
13:24:42,467 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d143a1]
13:24:42,467 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.childrenSet
13:24:42,468 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet.parentGoodsType.childrenSet
13:24:42,468 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.goods_typeDescription
13:24:42,468 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.goods_typeName
13:24:42,469 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet.parentGoodsType.parentGoodsType
13:24:42,469 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet.parentGoodsType.parentGoodsType
13:24:42,470 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,470 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,470 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,471 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : parentGoodsType
13:24:42,471 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,472 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,474 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
                - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}
          - JOIN (JoinDefinedByMetadata(childrenSet)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=qin.javaee8.jd.GoodsType.childrenSet)
                - SQL table alias mapping - childrense1_
                - alias suffix - 1_
                - suffixed key columns - {goodsTyp1_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - gook_pk1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=qin.javaee8.jd.GoodsType)
                      - SQL table alias mapping - goodstype2_
                      - alias suffix - 2_
                      - suffixed key columns - {gook_pk1_0_2_}
                      - JOIN (JoinDefinedByMetadata(parentGoodsType)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=qin.javaee8.jd.GoodsType)
                            - SQL table alias mapping - goodstype3_
                            - alias suffix - 3_
                            - suffixed key columns - {gook_pk1_0_3_}

13:24:42,475 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [READ]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_, childrense1_.goodsType_childrenSet as goodsTyp1_1_1_, goodstype2_.gook_pk as children2_1_1_, goodstype2_.gook_pk as gook_pk1_0_2_, goodstype2_.goods_typeDescription as goods_ty2_0_2_, goodstype2_.goods_typeName as goods_ty3_0_2_, goodstype2_.goodsType_parentId as goodsTyp4_0_2_, goodstype3_.gook_pk as gook_pk1_0_3_, goodstype3_.goods_typeDescription as goods_ty2_0_3_, goodstype3_.goods_typeName as goods_ty3_0_3_, goodstype3_.goodsType_parentId as goodsTyp4_0_3_ from GoodsType goodstype0_ left outer join goodstype_childrenSet childrense1_ on goodstype0_.gook_pk=childrense1_.goodsType_childrenSet left outer join GoodsType goodstype2_ on childrense1_.childrenSet_gook_pk=goodstype2_.gook_pk left outer join GoodsType goodstype3_ on goodstype2_.goodsType_parentId=goodstype3_.gook_pk where goodstype0_.gook_pk=?
13:24:42,475 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4647881c]
13:24:42,476 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,476 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@359b650b]
13:24:42,476 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a9b0a6f]
13:24:42,479 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,480 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,480 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,480 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10667848]
13:24:42,481 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,482 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,483 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,483 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [UPGRADE]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? for update
13:24:42,484 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191a709b]
13:24:42,484 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,485 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@453d496b]
13:24:42,486 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66bacdbc]
13:24:42,488 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,488 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,488 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,489 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6ee758]
13:24:42,489 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,490 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,491 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,492 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [UPGRADE_NOWAIT]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? for update
13:24:42,492 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@640dc4c6]
13:24:42,493 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,493 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bb35cc6]
13:24:42,493 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203c20cf]
13:24:42,496 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,497 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,497 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,498 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1debfa]
13:24:42,498 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,499 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,500 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,503 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [UPGRADE_SKIPLOCKED]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? for update
13:24:42,503 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44de94c3]
13:24:42,504 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,504 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6411d3c8]
13:24:42,505 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2116b68b]
13:24:42,505 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,505 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,506 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,506 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11de56e6]
13:24:42,507 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,507 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,508 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,508 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [FORCE]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? for update
13:24:42,509 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616b241a]
13:24:42,514 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,514 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f387978]
13:24:42,516 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb2651f]
13:24:42,517 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,517 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,518 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,518 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4441d567]
13:24:42,518 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,519 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,523 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,524 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [PESSIMISTIC_READ]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? lock in share mode
13:24:42,524 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1624c7]
13:24:42,525 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,525 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dcc6211]
13:24:42,526 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ec7422]
13:24:42,526 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,526 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,527 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,530 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48535004]
13:24:42,531 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,531 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,532 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,533 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [PESSIMISTIC_WRITE]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? for update
13:24:42,533 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@610df783]
13:24:42,533 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,534 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b56f5f8]
13:24:42,534 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d743e6]
13:24:42,535 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,535 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,535 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,536 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776802b0]
13:24:42,536 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,537 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,538 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,539 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [PESSIMISTIC_FORCE_INCREMENT]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=? for update
13:24:42,540 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c4c01]
13:24:42,541 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,541 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@592238c5]
13:24:42,541 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee8dcd3]
13:24:42,542 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,542 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,543 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,543 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a20b94b]
13:24:42,544 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,544 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,545 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,546 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [OPTIMISTIC]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=?
13:24:42,546 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdf39b2]
13:24:42,547 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,547 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cd59ef5]
13:24:42,554 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b082c5]
13:24:42,554 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,555 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,555 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,555 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16073fa8]
13:24:42,556 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,557 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,557 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.GoodsType)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:0>, path=qin.javaee8.jd.GoodsType)
          - CollectionAttributeFetchImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:1>, path=qin.javaee8.jd.GoodsType.childrenSet)
             - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=qin.javaee8.jd.GoodsType.childrenSet.<elements>)
          - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:3>, path=qin.javaee8.jd.GoodsType.parentGoodsType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.GoodsType)
          - SQL table alias mapping - goodstype0_
          - alias suffix - 0_
          - suffixed key columns - {gook_pk1_0_0_}

13:24:42,558 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.GoodsType [OPTIMISTIC_FORCE_INCREMENT]: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=?
13:24:42,599 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.jd.GoodsType: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=?
13:24:42,600 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.jd.GoodsType: select goodstype0_.gook_pk as gook_pk1_0_0_, goodstype0_.goods_typeDescription as goods_ty2_0_0_, goodstype0_.goods_typeName as goods_ty3_0_0_, goodstype0_.goodsType_parentId as goodsTyp4_0_0_ from GoodsType goodstype0_ where goodstype0_.gook_pk=?
13:24:42,601 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.jd.MobileGoods
13:24:42,602 DEBUG AbstractEntityPersister:3549 -  Version select: select goods_id, goods_name, goods_price, goods_description from MobileGoods where goods_id =? and goods_name =? and goods_price =? and goods_description =?
13:24:42,602 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select mobilegood_.goods_id, mobilegood_.goods_name, mobilegood_.goods_price, mobilegood_.goods_description, mobilegood_.tempArgs as tempArgs5_2_ from MobileGoods mobilegood_ where mobilegood_.goods_id=? and mobilegood_.goods_name=? and mobilegood_.goods_price=? and mobilegood_.goods_description=?
13:24:42,602 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into MobileGoods (tempArgs, goods_id, goods_name, goods_price, goods_description) values (?, ?, ?, ?, ?)
13:24:42,603 DEBUG AbstractEntityPersister:394 -  Update 0: update MobileGoods set tempArgs=? where goods_id=? and goods_name=? and goods_price=? and goods_description=?
13:24:42,603 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from MobileGoods where goods_id=? and goods_name=? and goods_price=? and goods_description=?
13:24:42,604 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314c8b4a]
13:24:42,610 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3b05a99b]
13:24:42,618 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,619 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,619 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,620 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,620 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,621 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,622 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,623 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,624 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [NONE]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=?
13:24:42,624 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab6718]
13:24:42,625 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3910fe11]
13:24:42,625 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,625 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,626 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,626 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,627 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,628 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,629 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,629 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,630 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [READ]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=?
13:24:42,630 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd77352]
13:24:42,631 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5109e8cf]
13:24:42,631 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,632 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,633 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,634 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,634 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,635 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,636 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,637 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,637 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? for update
13:24:42,638 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2db130]
13:24:42,640 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@327c7bea]
13:24:42,641 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,641 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,642 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,642 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,645 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,646 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,646 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,647 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,647 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_NOWAIT]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? for update
13:24:42,648 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d000e80]
13:24:42,648 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7cf283e1]
13:24:42,649 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,649 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,650 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,650 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,651 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,652 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,653 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,653 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,654 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [UPGRADE_SKIPLOCKED]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? for update
13:24:42,654 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@252f626c]
13:24:42,655 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@33f98231]
13:24:42,655 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,656 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,656 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,656 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,657 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,657 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,658 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,658 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,659 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [FORCE]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? for update
13:24:42,659 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b10a26d]
13:24:42,660 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@74075134]
13:24:42,660 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,660 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,661 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,661 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,661 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,662 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,662 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,663 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,664 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_READ]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? lock in share mode
13:24:42,664 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31464a43]
13:24:42,665 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7f8633ae]
13:24:42,665 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,666 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,666 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,667 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,667 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,667 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,668 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,670 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,671 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_WRITE]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? for update
13:24:42,671 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d7b252]
13:24:42,672 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4682eba5]
13:24:42,672 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,673 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,673 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,673 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,674 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,676 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,677 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,677 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,678 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [PESSIMISTIC_FORCE_INCREMENT]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=? for update
13:24:42,679 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540a903b]
13:24:42,679 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@58496dc]
13:24:42,680 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,680 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,680 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,681 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,681 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,682 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,682 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,684 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,684 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=?
13:24:42,685 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23811a09]
13:24:42,685 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0>-id -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2125ad3]
13:24:42,686 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : id
13:24:42,686 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
13:24:42,686 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
13:24:42,687 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
13:24:42,687 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : tempArgs
13:24:42,688 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,688 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,689 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.jd.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.jd.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.jd.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.jd.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {goods_id1_2_0_, goods_na2_2_0_, goods_pr3_2_0_, goods_de4_2_0_}
          - JOIN (JoinDefinedByMetadata(id)) : <gen:0> -> <gen:0>-id
             - CompositeQuerySpaceImpl(uid=<gen:0>-id)
                - SQL table alias mapping - mobilegood0_

13:24:42,690 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.jd.MobileGoods [OPTIMISTIC_FORCE_INCREMENT]: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=?
13:24:42,690 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=?
13:24:42,691 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.jd.MobileGoods: select mobilegood0_.goods_id as goods_id1_2_0_, mobilegood0_.goods_name as goods_na2_2_0_, mobilegood0_.goods_price as goods_pr3_2_0_, mobilegood0_.goods_description as goods_de4_2_0_, mobilegood0_.tempArgs as tempArgs5_2_0_ from MobileGoods mobilegood0_ where mobilegood0_.goods_id=? and mobilegood0_.goods_name=? and mobilegood0_.goods_price=? and mobilegood0_.goods_description=?
13:24:42,704 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56d93692]
13:24:42,704 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1686f0b4]
13:24:42,705 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : childrenSet
13:24:42,705 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : childrenSet
13:24:42,706 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeDescription
13:24:42,706 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_typeName
13:24:42,706 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType
13:24:42,707 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26722665]
13:24:42,707 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType.childrenSet
13:24:42,707 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : parentGoodsType.childrenSet
13:24:42,708 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType.goods_typeDescription
13:24:42,708 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType.goods_typeName
13:24:42,708 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : parentGoodsType.parentGoodsType
13:24:42,709 DEBUG MetamodelGraphWalker:145 - Property path deemed to be circular : parentGoodsType.parentGoodsType
13:24:42,710 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
13:24:42,715 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
13:24:42,723 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=qin.javaee8.jd.GoodsType.childrenSet)
    - Returns
       - CollectionReturnImpl(collection=qin.javaee8.jd.GoodsType.childrenSet, querySpaceUid=<gen:0>, path=[qin.javaee8.jd.GoodsType.childrenSet])
          - (collection element) CollectionFetchableElementEntityGraph(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:1>, path=[qin.javaee8.jd.GoodsType.childrenSet].<elements>)
             - EntityAttributeFetchImpl(entity=qin.javaee8.jd.GoodsType, querySpaceUid=<gen:2>, path=[qin.javaee8.jd.GoodsType.childrenSet].<elements>.parentGoodsType)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=qin.javaee8.jd.GoodsType.childrenSet)
          - SQL table alias mapping - childrense0_
          - alias suffix - 0_
          - suffixed key columns - {goodsTyp1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - gook_pk1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=qin.javaee8.jd.GoodsType)
                - SQL table alias mapping - goodstype1_
                - alias suffix - 1_
                - suffixed key columns - {gook_pk1_0_1_}
                - JOIN (JoinDefinedByMetadata(parentGoodsType)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=qin.javaee8.jd.GoodsType)
                      - SQL table alias mapping - goodstype2_
                      - alias suffix - 2_
                      - suffixed key columns - {gook_pk1_0_2_}

13:24:42,725 DEBUG CollectionLoader:83 - Static select for collection qin.javaee8.jd.GoodsType.childrenSet: select childrense0_.goodsType_childrenSet as goodsTyp1_1_0_, childrense0_.childrenSet_gook_pk as children2_1_0_, goodstype1_.gook_pk as gook_pk1_0_1_, goodstype1_.goods_typeDescription as goods_ty2_0_1_, goodstype1_.goods_typeName as goods_ty3_0_1_, goodstype1_.goodsType_parentId as goodsTyp4_0_1_, goodstype2_.gook_pk as gook_pk1_0_2_, goodstype2_.goods_typeDescription as goods_ty2_0_2_, goodstype2_.goods_typeName as goods_ty3_0_2_, goodstype2_.goodsType_parentId as goodsTyp4_0_2_ from goodstype_childrenSet childrense0_ inner join GoodsType goodstype1_ on childrense0_.childrenSet_gook_pk=goodstype1_.gook_pk left outer join GoodsType goodstype2_ on goodstype1_.goodsType_parentId=goodstype2_.gook_pk where childrense0_.goodsType_childrenSet=?
13:24:42,889 DEBUG SQL:92 - 
    
    create table GoodsType (
        gook_pk bigint not null,
        goods_typeDescription varchar(5000),
        goods_typeName varchar(40),
        goodsType_parentId bigint,
        primary key (gook_pk)
    ) ENGINE=InnoDB
13:24:42,972 DEBUG SQL:92 - 
    
    create table goodstype_childrenSet (
        goodsType_childrenSet bigint not null,
        childrenSet_gook_pk bigint not null,
        primary key (goodsType_childrenSet, childrenSet_gook_pk)
    ) ENGINE=InnoDB
13:24:43,008 DEBUG SQL:92 - 
    
    create table hibernate_sequence (
        next_val bigint
    ) ENGINE=InnoDB
13:24:43,039 DEBUG SQL:92 - 
    
    insert into hibernate_sequence values ( 1 )
13:24:43,047 DEBUG SQL:92 - 
    
    create table MobileGoods (
        goods_id bigint not null,
        goods_name varchar(40) not null,
        goods_price double precision not null,
        goods_description varchar(900) not null,
        tempArgs integer,
        primary key (goods_id, goods_name, goods_price, goods_description)
    ) ENGINE=InnoDB
13:24:43,111 DEBUG SQL:92 - 
    
    alter table goodstype_childrenSet 
        drop constraint UK_76ojnv8bdx1xr60ft0xpq8ytt
13:24:43,115 DEBUG SQL:92 - 
    
    alter table goodstype_childrenSet 
        add constraint UK_76ojnv8bdx1xr60ft0xpq8ytt unique (childrenSet_gook_pk)
13:24:43,168 DEBUG SQL:92 - 
    
    alter table GoodsType 
        add constraint fk_parent 
        foreign key (goodsType_parentId) 
        references GoodsType (gook_pk)
13:24:43,321 DEBUG SQL:92 - 
    
    alter table goodstype_childrenSet 
        add constraint FKiljpcmtw7jk7ejokpl98k98d3 
        foreign key (childrenSet_gook_pk) 
        references GoodsType (gook_pk)
13:24:43,515 DEBUG SQL:92 - 
    
    alter table goodstype_childrenSet 
        add constraint fk_children 
        foreign key (goodsType_childrenSet) 
        references GoodsType (gook_pk)
13:24:43,641 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
13:24:43,643 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
13:24:43,658 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
13:24:43,662 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
13:24:43,663 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
13:24:43,667 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3491e86e
13:24:43,668 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: d9c93802-6417-4143-894c-65037992f8d2 (<unnamed>)
13:24:43,668 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
13:24:43,796  INFO HibernateTransactionManager:357 - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@6200f9cb] of Hibernate SessionFactory for HibernateTransactionManager
13:24:44,071 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
13:24:44,086 DEBUG TransactionImpl:55 - begin
13:31:02,674  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:31:02 CST 2017]; root of context hierarchy
13:31:02,901  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:31:04,845  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:31:04,875  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:31:05,910  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:31:06,191 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:31:06,204 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:31:06,215 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:31:06,730  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:31:06,737  INFO Environment:213 - HHH000206: hibernate.properties not found
13:31:06,811 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:31:06,812 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:31:06,821 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:31:07,146 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:31:07,160 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:31:07,161 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:31:07,223 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:31:07,246  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:31:07,276 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:31:07,276 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:31:07,313 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:31:09,596 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c541c15
13:31:09,598 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c541c15
13:31:09,598 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c541c15
13:31:09,601 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2c0e88
13:31:09,605 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b3a45f1
13:31:09,606 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@20a14b55
13:31:09,610 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@13cf7d52
13:31:09,611 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@13cf7d52
13:31:09,611 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13cf7d52
13:31:09,614 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@77a98a6a
13:31:09,615 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@77a98a6a
13:31:09,615 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77a98a6a
13:31:09,619 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5a7005d
13:31:09,620 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5a7005d
13:31:09,621 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a7005d
13:31:09,623 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@5e81e5ac
13:31:09,624 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@5e81e5ac
13:31:09,624 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e81e5ac
13:31:09,627 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3dd1dc90
13:31:09,628 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3dd1dc90
13:31:09,628 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3dd1dc90
13:31:09,632 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4044fb95
13:31:09,632 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4044fb95
13:31:09,633 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4044fb95
13:31:09,637 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3f792b9b
13:31:09,637 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3f792b9b
13:31:09,638 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f792b9b
13:31:09,642 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72758afa
13:31:09,642 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72758afa
13:31:09,645 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@607fbe09
13:31:09,646 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@607fbe09
13:31:09,648 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3382f8ae
13:31:09,649 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3382f8ae
13:31:09,651 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a5bd950
13:31:09,653 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2bd2b28e
13:31:09,655 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@674658f7
13:31:09,656 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@674658f7
13:31:09,659 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@58c34bb3
13:31:09,660 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58c34bb3
13:31:09,697 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@67ab1c47
13:31:09,698 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67ab1c47
13:31:09,703 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b444398
13:31:09,706 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b444398
13:31:09,713 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c4d27c8
13:31:09,714 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c4d27c8
13:31:09,717 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@19ae6bb
13:31:09,718 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@19ae6bb
13:31:09,721 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bb7bd00
13:31:09,722 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bb7bd00
13:31:09,725 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@14b030a0
13:31:09,725 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@14b030a0
13:31:09,737 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fffff43
13:31:09,738 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fffff43
13:31:09,742 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@662f5666
13:31:09,742 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662f5666
13:31:09,746 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@502f1f4c
13:31:09,746 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@502f1f4c
13:31:09,749 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fbda97b
13:31:09,750 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fbda97b
13:31:09,750 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fbda97b
13:31:09,754 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@306851c7
13:31:09,758 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@41813449
13:31:09,759 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41813449
13:31:09,759 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41813449
13:31:09,762 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1080b026
13:31:09,765 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@dcfda20
13:31:09,765 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dcfda20
13:31:09,768 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@40499e4f
13:31:09,769 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40499e4f
13:31:09,771 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a791b66
13:31:09,772 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a791b66
13:31:09,774 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@61884cb1
13:31:09,775 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61884cb1
13:31:09,778 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62ea3440
13:31:09,778 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62ea3440
13:31:09,779 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@66ce957f
13:31:09,783 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@efde75f
13:31:09,783 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@efde75f
13:31:09,784 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@efde75f
13:31:09,786 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:31:09,787 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:31:09,788 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:31:09,790 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5316e95f
13:31:09,792 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@13c3c1e1
13:31:09,794 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@285c08c8
13:31:09,795 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@285c08c8
13:31:09,795 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@285c08c8
13:31:09,798 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@388ba540
13:31:09,798 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@388ba540
13:31:09,798 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@388ba540
13:31:09,800 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3d484181
13:31:09,802 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@37bd68c3
13:31:09,813 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@4f2c9ba6
13:31:09,815 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2c9ba6
13:31:09,816 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24d4d7c9
13:31:09,830 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@75e01201
13:31:09,831 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@75e01201
13:31:09,842 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@47404bea
13:31:09,842 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47404bea
13:31:09,843 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cbcf243
13:31:09,845 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@339bf286
13:31:09,850 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@40e10ff8
13:31:09,859 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@54227100
13:31:09,860 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54227100
13:31:09,861 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f446bef
13:31:09,862 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7829b776
13:31:09,863 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5778826f
13:31:09,863 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b64c4b7
13:31:09,865 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4763c727
13:31:09,866 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72445aba
13:31:09,866 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61bcd567
13:31:09,867 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c80e49b
13:31:10,544 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:31:10,545 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:31:10,546 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:31:10,579  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:31:10,662 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:31:10,666 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:31:10,839 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:31:10,840 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:31:10,842 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:31:10,843 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:31:10,848 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:31:10,853 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:31:10,855 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:31:10,857 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:31:10,861 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:31:10,862 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:31:10,864 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:31:10,866 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:31:10,867 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:31:10,870 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:31:11,012 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:31:11,073 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:31:11,080 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:31:11,080 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:31:11,105 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:31:11,106 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:31:11,107 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:31:11,108 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:31:11,109 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:31:11,112 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:31:11,113 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:31:11,113 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:31:11,114 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:31:11,117 DEBUG ModelBinder:1782 - Mapping entity secondary-table: qin.javaee8.jd.MobileGoods -> mobileGoods_goodsSet
13:31:11,118 DEBUG PrimaryKey:35 - Forcing column [col_goodsset] to be non-null as it is part of the primary key for table [mobilegoods_goodsset]
13:31:11,131 DEBUG ModelBinder:2501 - Mapped property: goodsType -> []
13:31:11,142 DEBUG AnnotationBinder:511 - Binding entity from annotated class: qin.javaee8.jd.GoodsType
13:31:11,186 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13:31:11,200 DEBUG EntityBinder:414 - Import with entity name GoodsType
13:31:11,212 DEBUG EntityBinder:690 - Bind entity qin.javaee8.jd.GoodsType on table GoodsType
13:31:11,619 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=gook_pk, insertable=true, updatable=true, unique=false}
13:31:11,630 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
13:31:11,635 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:id]
13:31:11,641 DEBUG SimpleValueBinder:411 - building SimpleValue for id
13:31:11,642 DEBUG PropertyBinder:265 - Building property id
13:31:11,660 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:31:11,662 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet, insertable=true, updatable=true, unique=false}
13:31:11,667 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:31:11,696 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:31:11,698 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet_KEY, insertable=true, updatable=true, unique=false}
13:31:11,701 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='childrenSet_KEY', referencedColumn='null', mappedBy='null'}
13:31:11,705 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_childrenSet', referencedColumn='', mappedBy=''}
13:31:11,705 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:31:11,711 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.childrenSet
13:31:11,717 DEBUG PropertyBinder:265 - Building property childrenSet
13:31:11,727 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeDescription, insertable=true, updatable=true, unique=false}
13:31:11,728 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeDescription with lazy=false
13:31:11,729 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeDescription]
13:31:11,732 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeDescription
13:31:11,742 DEBUG PropertyBinder:265 - Building property goods_typeDescription
13:31:11,743 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeName, insertable=true, updatable=true, unique=false}
13:31:11,746 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeName with lazy=false
13:31:11,746 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeName]
13:31:11,747 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeName
13:31:11,748 DEBUG PropertyBinder:265 - Building property goods_typeName
13:31:11,748 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:31:11,749 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=mobileGoodsSet, insertable=true, updatable=true, unique=false}
13:31:11,749 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:31:11,750 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:31:11,750 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=mobileGoodsSet_KEY, insertable=true, updatable=true, unique=false}
13:31:11,750 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSet_KEY', referencedColumn='null', mappedBy='null'}
13:31:11,751 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSet', referencedColumn='', mappedBy=''}
13:31:11,751 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:31:11,752 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.mobileGoodsSet
13:31:11,752 DEBUG PropertyBinder:265 - Building property mobileGoodsSet
13:31:11,753 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_parentId', referencedColumn='', mappedBy=''}
13:31:11,755 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=parentGoodsType, insertable=true, updatable=true, unique=false}
13:31:11,762 DEBUG PropertyBinder:265 - Building property parentGoodsType
13:31:11,774  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
13:32:55,118  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:32:55 CST 2017]; root of context hierarchy
13:32:55,312  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:32:56,815  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:32:56,827  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:32:57,751  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:32:57,901 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:32:57,908 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:32:57,920 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:32:58,365  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:32:58,371  INFO Environment:213 - HHH000206: hibernate.properties not found
13:32:58,431 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:32:58,431 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:32:58,463 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:32:58,910 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:32:58,927 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:32:58,928 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:32:58,981 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:32:59,007  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:32:59,041 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:32:59,042 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:32:59,086 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:33:01,588 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c541c15
13:33:01,589 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c541c15
13:33:01,589 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c541c15
13:33:01,591 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2c0e88
13:33:01,594 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b3a45f1
13:33:01,596 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@20a14b55
13:33:01,599 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@13cf7d52
13:33:01,600 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@13cf7d52
13:33:01,601 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13cf7d52
13:33:01,603 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@77a98a6a
13:33:01,604 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@77a98a6a
13:33:01,605 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77a98a6a
13:33:01,609 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5a7005d
13:33:01,609 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5a7005d
13:33:01,610 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a7005d
13:33:01,613 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@5e81e5ac
13:33:01,613 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@5e81e5ac
13:33:01,614 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e81e5ac
13:33:01,617 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3dd1dc90
13:33:01,618 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3dd1dc90
13:33:01,618 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3dd1dc90
13:33:01,624 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4044fb95
13:33:01,624 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4044fb95
13:33:01,630 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4044fb95
13:33:01,634 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3f792b9b
13:33:01,636 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3f792b9b
13:33:01,636 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f792b9b
13:33:01,640 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72758afa
13:33:01,641 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72758afa
13:33:01,643 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@607fbe09
13:33:01,644 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@607fbe09
13:33:01,646 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3382f8ae
13:33:01,646 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3382f8ae
13:33:01,649 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a5bd950
13:33:01,652 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2bd2b28e
13:33:01,655 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@674658f7
13:33:01,655 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@674658f7
13:33:01,658 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@58c34bb3
13:33:01,659 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58c34bb3
13:33:01,698 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@67ab1c47
13:33:01,699 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67ab1c47
13:33:01,703 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b444398
13:33:01,704 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b444398
13:33:01,708 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c4d27c8
13:33:01,709 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c4d27c8
13:33:01,713 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@19ae6bb
13:33:01,713 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@19ae6bb
13:33:01,717 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bb7bd00
13:33:01,717 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bb7bd00
13:33:01,721 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@14b030a0
13:33:01,721 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@14b030a0
13:33:01,731 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fffff43
13:33:01,732 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fffff43
13:33:01,736 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@662f5666
13:33:01,737 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662f5666
13:33:01,740 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@502f1f4c
13:33:01,741 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@502f1f4c
13:33:01,745 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fbda97b
13:33:01,745 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fbda97b
13:33:01,746 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fbda97b
13:33:01,749 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@306851c7
13:33:01,752 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@41813449
13:33:01,752 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41813449
13:33:01,752 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41813449
13:33:01,754 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1080b026
13:33:01,757 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@dcfda20
13:33:01,757 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dcfda20
13:33:01,759 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@40499e4f
13:33:01,759 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40499e4f
13:33:01,761 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a791b66
13:33:01,761 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a791b66
13:33:01,764 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@61884cb1
13:33:01,765 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61884cb1
13:33:01,769 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62ea3440
13:33:01,770 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62ea3440
13:33:01,771 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@66ce957f
13:33:01,774 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@efde75f
13:33:01,775 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@efde75f
13:33:01,776 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@efde75f
13:33:01,778 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:33:01,779 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:33:01,780 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:33:01,782 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5316e95f
13:33:01,784 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@13c3c1e1
13:33:01,787 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@285c08c8
13:33:01,788 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@285c08c8
13:33:01,788 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@285c08c8
13:33:01,791 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@388ba540
13:33:01,792 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@388ba540
13:33:01,792 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@388ba540
13:33:01,795 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3d484181
13:33:01,798 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@37bd68c3
13:33:01,811 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@4f2c9ba6
13:33:01,812 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2c9ba6
13:33:01,814 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24d4d7c9
13:33:01,828 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@75e01201
13:33:01,829 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@75e01201
13:33:01,841 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@47404bea
13:33:01,842 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47404bea
13:33:01,845 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cbcf243
13:33:01,847 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@339bf286
13:33:01,851 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@40e10ff8
13:33:01,862 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@54227100
13:33:01,862 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54227100
13:33:01,863 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f446bef
13:33:01,864 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7829b776
13:33:01,864 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5778826f
13:33:01,865 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b64c4b7
13:33:01,865 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4763c727
13:33:01,865 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72445aba
13:33:01,866 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61bcd567
13:33:01,866 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c80e49b
13:33:02,471 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:33:02,472 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:33:02,472 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:33:02,504  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:33:02,587 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:33:02,592 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:33:02,770 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:33:02,773 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:33:02,776 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:33:02,776 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:33:02,777 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:33:02,780 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:33:02,781 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:33:02,784 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:33:02,788 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:33:02,790 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:33:02,792 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:33:02,794 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:33:02,795 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:33:02,797 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:33:02,908 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:33:02,969 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:33:02,977 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:33:02,977 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:33:03,002 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:33:03,003 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:33:03,004 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:33:03,005 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:33:03,007 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:33:03,010 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:33:03,011 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:33:03,012 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:33:03,012 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:33:03,024 DEBUG ModelBinder:2501 - Mapped property: goodsType -> []
13:33:03,033 DEBUG AnnotationBinder:511 - Binding entity from annotated class: qin.javaee8.jd.GoodsType
13:33:03,070 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13:33:03,081 DEBUG EntityBinder:414 - Import with entity name GoodsType
13:33:03,093 DEBUG EntityBinder:690 - Bind entity qin.javaee8.jd.GoodsType on table GoodsType
13:33:03,636 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=gook_pk, insertable=true, updatable=true, unique=false}
13:33:03,648 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
13:33:03,654 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:id]
13:33:03,657 DEBUG SimpleValueBinder:411 - building SimpleValue for id
13:33:03,658 DEBUG PropertyBinder:265 - Building property id
13:33:03,669 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:33:03,672 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet, insertable=true, updatable=true, unique=false}
13:33:03,675 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:33:03,708 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:33:03,716 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet_KEY, insertable=true, updatable=true, unique=false}
13:33:03,725 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='childrenSet_KEY', referencedColumn='null', mappedBy='null'}
13:33:03,728 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_childrenSet', referencedColumn='', mappedBy=''}
13:33:03,729 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:33:03,730 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.childrenSet
13:33:03,738 DEBUG PropertyBinder:265 - Building property childrenSet
13:33:03,739 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeDescription, insertable=true, updatable=true, unique=false}
13:33:03,740 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeDescription with lazy=false
13:33:03,740 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeDescription]
13:33:03,741 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeDescription
13:33:03,742 DEBUG PropertyBinder:265 - Building property goods_typeDescription
13:33:03,743 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeName, insertable=true, updatable=true, unique=false}
13:33:03,744 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeName with lazy=false
13:33:03,744 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeName]
13:33:03,745 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeName
13:33:03,745 DEBUG PropertyBinder:265 - Building property goods_typeName
13:33:03,746 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:33:03,747 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=mobileGoodsSet, insertable=true, updatable=true, unique=false}
13:33:03,749 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:33:03,750 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:33:03,750 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=mobileGoodsSet_KEY, insertable=true, updatable=true, unique=false}
13:33:03,751 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSet_KEY', referencedColumn='null', mappedBy='null'}
13:33:03,751 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSet', referencedColumn='', mappedBy=''}
13:33:03,752 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:33:03,752 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.mobileGoodsSet
13:33:03,753 DEBUG PropertyBinder:265 - Building property mobileGoodsSet
13:33:03,753 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_parentId', referencedColumn='', mappedBy=''}
13:33:03,754 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=parentGoodsType, insertable=true, updatable=true, unique=false}
13:33:03,758 DEBUG PropertyBinder:265 - Building property parentGoodsType
13:33:03,765  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
13:35:11,854  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 13:35:11 CST 2017]; root of context hierarchy
13:35:12,043  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
13:35:13,318  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
13:35:13,336  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:35:14,120  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:35:14,268 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
13:35:14,273 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
13:35:14,281 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
13:35:14,639  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
13:35:14,644  INFO Environment:213 - HHH000206: hibernate.properties not found
13:35:14,709 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
13:35:14,710 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
13:35:14,717 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
13:35:15,181 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
13:35:15,196 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
13:35:15,197 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
13:35:15,266 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
13:35:15,296  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
13:35:15,340 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
13:35:15,341 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
13:35:15,399 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/jd/goods.hbm.xml,type=RESOURCE)
13:35:18,492 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c541c15
13:35:18,494 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c541c15
13:35:18,496 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c541c15
13:35:18,499 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2c0e88
13:35:18,503 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b3a45f1
13:35:18,505 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@20a14b55
13:35:18,511 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@13cf7d52
13:35:18,512 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@13cf7d52
13:35:18,516 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13cf7d52
13:35:18,519 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@77a98a6a
13:35:18,520 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@77a98a6a
13:35:18,521 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77a98a6a
13:35:18,525 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5a7005d
13:35:18,526 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@5a7005d
13:35:18,526 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a7005d
13:35:18,531 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@5e81e5ac
13:35:18,532 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@5e81e5ac
13:35:18,533 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e81e5ac
13:35:18,538 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3dd1dc90
13:35:18,539 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@3dd1dc90
13:35:18,541 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3dd1dc90
13:35:18,545 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4044fb95
13:35:18,547 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@4044fb95
13:35:18,549 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4044fb95
13:35:18,555 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3f792b9b
13:35:18,557 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3f792b9b
13:35:18,557 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f792b9b
13:35:18,564 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72758afa
13:35:18,571 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72758afa
13:35:18,574 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@607fbe09
13:35:18,575 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@607fbe09
13:35:18,578 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3382f8ae
13:35:18,581 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3382f8ae
13:35:18,584 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a5bd950
13:35:18,586 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2bd2b28e
13:35:18,589 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@674658f7
13:35:18,590 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@674658f7
13:35:18,596 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@58c34bb3
13:35:18,597 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58c34bb3
13:35:18,655 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@67ab1c47
13:35:18,656 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67ab1c47
13:35:18,660 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b444398
13:35:18,661 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b444398
13:35:18,666 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c4d27c8
13:35:18,666 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c4d27c8
13:35:18,671 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@19ae6bb
13:35:18,672 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@19ae6bb
13:35:18,676 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bb7bd00
13:35:18,677 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bb7bd00
13:35:18,681 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@14b030a0
13:35:18,682 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@14b030a0
13:35:18,692 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fffff43
13:35:18,693 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fffff43
13:35:18,698 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@662f5666
13:35:18,699 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@662f5666
13:35:18,703 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@502f1f4c
13:35:18,703 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@502f1f4c
13:35:18,706 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fbda97b
13:35:18,707 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fbda97b
13:35:18,708 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fbda97b
13:35:18,712 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@306851c7
13:35:18,715 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@41813449
13:35:18,717 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41813449
13:35:18,719 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41813449
13:35:18,722 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1080b026
13:35:18,725 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@dcfda20
13:35:18,725 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dcfda20
13:35:18,728 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@40499e4f
13:35:18,729 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40499e4f
13:35:18,732 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a791b66
13:35:18,732 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a791b66
13:35:18,735 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@61884cb1
13:35:18,736 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61884cb1
13:35:18,739 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62ea3440
13:35:18,740 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62ea3440
13:35:18,742 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@66ce957f
13:35:18,745 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@efde75f
13:35:18,746 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@efde75f
13:35:18,746 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@efde75f
13:35:18,750 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:35:18,750 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:35:18,751 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3dddefd8
13:35:18,755 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5316e95f
13:35:18,758 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@13c3c1e1
13:35:18,760 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@285c08c8
13:35:18,761 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@285c08c8
13:35:18,762 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@285c08c8
13:35:18,764 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@388ba540
13:35:18,765 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@388ba540
13:35:18,765 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@388ba540
13:35:18,767 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3d484181
13:35:18,769 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@37bd68c3
13:35:18,782 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@4f2c9ba6
13:35:18,785 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2c9ba6
13:35:18,788 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24d4d7c9
13:35:18,799 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@75e01201
13:35:18,802 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@75e01201
13:35:18,811 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@47404bea
13:35:18,811 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47404bea
13:35:18,814 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cbcf243
13:35:18,815 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@339bf286
13:35:18,840 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@40e10ff8
13:35:18,848 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@54227100
13:35:18,849 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54227100
13:35:18,851 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f446bef
13:35:18,851 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7829b776
13:35:18,852 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5778826f
13:35:18,852 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b64c4b7
13:35:18,853 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4763c727
13:35:18,854 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72445aba
13:35:18,854 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61bcd567
13:35:18,855 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c80e49b
13:35:19,548 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
13:35:19,549 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
13:35:19,550 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
13:35:19,581  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
13:35:19,660 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
13:35:19,665 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
13:35:19,870 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
13:35:19,872 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
13:35:19,875 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
13:35:19,876 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
13:35:19,877 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
13:35:19,880 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
13:35:19,882 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
13:35:19,885 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:35:19,888 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
13:35:19,890 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
13:35:19,892 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
13:35:19,894 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
13:35:19,895 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
13:35:19,898 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
13:35:20,020 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
13:35:20,109 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.jd.MobileGoods -> MobileGoods
13:35:20,118 DEBUG ModelBinder:2575 - Binding component [qin.javaee8.jd.MobileGoods.pk]
13:35:20,119 DEBUG ModelBinder:2577 - Binding component [qin.javaee8.jd.MobileGoods.pk] to explicitly specified class
13:35:20,146 DEBUG ModelBinder:2501 - Mapped property: id -> [goods_id]
13:35:20,147 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [goods_name]
13:35:20,149 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [goods_price]
13:35:20,151 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
13:35:20,153 DEBUG ModelBinder:2501 - Mapped property: pk -> [goods_id, goods_name, goods_price, goods_description]
13:35:20,156 DEBUG PrimaryKey:35 - Forcing column [goods_id] to be non-null as it is part of the primary key for table [mobilegoods]
13:35:20,157 DEBUG PrimaryKey:35 - Forcing column [goods_name] to be non-null as it is part of the primary key for table [mobilegoods]
13:35:20,157 DEBUG PrimaryKey:35 - Forcing column [goods_price] to be non-null as it is part of the primary key for table [mobilegoods]
13:35:20,158 DEBUG PrimaryKey:35 - Forcing column [goods_description] to be non-null as it is part of the primary key for table [mobilegoods]
13:35:20,169 DEBUG ModelBinder:2501 - Mapped property: goodsType -> []
13:35:20,176 DEBUG AnnotationBinder:511 - Binding entity from annotated class: qin.javaee8.jd.GoodsType
13:35:20,214 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13:35:20,225 DEBUG EntityBinder:414 - Import with entity name GoodsType
13:35:20,237 DEBUG EntityBinder:690 - Bind entity qin.javaee8.jd.GoodsType on table GoodsType
13:35:20,631 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=gook_pk, insertable=true, updatable=true, unique=false}
13:35:20,640 DEBUG PropertyBinder:174 - MetadataSourceProcessor property id with lazy=false
13:35:20,644 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:id]
13:35:20,648 DEBUG SimpleValueBinder:411 - building SimpleValue for id
13:35:20,648 DEBUG PropertyBinder:265 - Building property id
13:35:20,661 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:35:20,664 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet, insertable=true, updatable=true, unique=false}
13:35:20,670 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:35:20,716 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:35:20,732 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=childrenSet_KEY, insertable=true, updatable=true, unique=false}
13:35:20,741 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='childrenSet_KEY', referencedColumn='null', mappedBy='null'}
13:35:20,745 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_childrenSet', referencedColumn='', mappedBy=''}
13:35:20,746 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:35:20,748 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.childrenSet
13:35:20,753 DEBUG PropertyBinder:265 - Building property childrenSet
13:35:20,756 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeDescription, insertable=true, updatable=true, unique=false}
13:35:20,757 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeDescription with lazy=false
13:35:20,758 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeDescription]
13:35:20,763 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeDescription
13:35:20,765 DEBUG PropertyBinder:265 - Building property goods_typeDescription
13:35:20,766 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=goods_typeName, insertable=true, updatable=true, unique=false}
13:35:20,773 DEBUG PropertyBinder:174 - MetadataSourceProcessor property goods_typeName with lazy=false
13:35:20,774 DEBUG AbstractPropertyHolder:89 - Attempting to locate auto-apply AttributeConverter for property [qin.javaee8.jd.GoodsType:goods_typeName]
13:35:20,775 DEBUG SimpleValueBinder:411 - building SimpleValue for goods_typeName
13:35:20,775 DEBUG PropertyBinder:265 - Building property goods_typeName
13:35:20,777 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:35:20,778 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=mobileGoodsSet, insertable=true, updatable=true, unique=false}
13:35:20,778 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=null, insertable=true, updatable=true, unique=false}
13:35:20,779 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=element, insertable=true, updatable=true, unique=false}
13:35:20,780 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=mobileGoodsSet_KEY, insertable=true, updatable=true, unique=false}
13:35:20,781 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='mobileGoodsSet_KEY', referencedColumn='null', mappedBy='null'}
13:35:20,782 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:35:20,782 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
13:35:20,783 DEBUG CollectionBinder:388 - Collection role: qin.javaee8.jd.GoodsType.mobileGoodsSet
13:35:20,783 DEBUG PropertyBinder:265 - Building property mobileGoodsSet
13:35:20,784 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='goodsType_parentId', referencedColumn='', mappedBy=''}
13:35:20,785 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GoodsType), mappingColumn=parentGoodsType, insertable=true, updatable=true, unique=false}
13:35:20,788 DEBUG PropertyBinder:265 - Building property parentGoodsType
13:35:20,796  WARN ClassPathXmlApplicationContext:550 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectDAO8Impl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException
14:29:50,569  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 14:29:50 CST 2017]; root of context hierarchy
14:29:50,773  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
14:29:51,915  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
14:29:51,926  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:29:52,715  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:29:52,898 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
14:29:52,905 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
14:29:52,916 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
14:29:53,273  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
14:29:53,277  INFO Environment:213 - HHH000206: hibernate.properties not found
14:29:53,335 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
14:29:53,336 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
14:29:53,344 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
14:29:53,749 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
14:29:53,761 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
14:29:53,762 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
14:29:53,816 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
14:29:53,844  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
14:29:53,881 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
14:29:53,892  WARN deprecation:75 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
14:29:53,892 DEBUG LocalXmlResourceResolver:79 - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
14:29:53,957 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/domain/person.hbm.xml,type=RESOURCE)
14:29:56,790 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
14:29:56,791 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
14:29:56,791 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@463b4ac8
14:29:56,793 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d0d6318
14:29:56,795 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bff34c6
14:29:56,797 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5644dc81
14:29:56,801 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
14:29:56,801 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
14:29:56,802 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c42d2b7
14:29:56,804 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@774698ab
14:29:56,805 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@774698ab
14:29:56,805 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@774698ab
14:29:56,808 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
14:29:56,809 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
14:29:56,809 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b6b1987
14:29:56,812 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@7c541c15
14:29:56,813 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@7c541c15
14:29:56,813 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c541c15
14:29:56,817 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
14:29:56,818 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
14:29:56,819 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c1bd0be
14:29:56,822 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
14:29:56,823 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
14:29:56,824 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ad977d
14:29:56,828 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
14:29:56,828 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
14:29:56,829 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3e4aff
14:29:56,833 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62452cc9
14:29:56,834 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62452cc9
14:29:56,837 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7516e4e5
14:29:56,839 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7516e4e5
14:29:56,845 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3e7634b9
14:29:56,845 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7634b9
14:29:56,847 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@abf688e
14:29:56,849 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@686449f9
14:29:56,851 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@36f48b4
14:29:56,851 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36f48b4
14:29:56,854 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@3f792b9b
14:29:56,854 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f792b9b
14:29:56,881 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@52045dbe
14:29:56,882 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52045dbe
14:29:56,887 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
14:29:56,888 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
14:29:56,892 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4504d271
14:29:56,893 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4504d271
14:29:56,896 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
14:29:56,896 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
14:29:56,900 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
14:29:56,900 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
14:29:56,903 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
14:29:56,904 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
14:29:56,912 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
14:29:56,913 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
14:29:56,918 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@758c83d8
14:29:56,918 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@758c83d8
14:29:56,921 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@58359ebd
14:29:56,921 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58359ebd
14:29:56,923 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee37ca3
14:29:56,924 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee37ca3
14:29:56,924 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee37ca3
14:29:56,928 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b030a0
14:29:56,930 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@56bca85b
14:29:56,931 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56bca85b
14:29:56,931 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56bca85b
14:29:56,933 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d1a32f
14:29:56,936 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40c80397
14:29:56,937 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40c80397
14:29:56,939 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@7c2b6087
14:29:56,939 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c2b6087
14:29:56,941 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b324585
14:29:56,942 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b324585
14:29:56,944 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@5974109
14:29:56,944 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5974109
14:29:56,948 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75f5fd58
14:29:56,948 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75f5fd58
14:29:56,949 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12bcd0c0
14:29:56,951 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@4678a2eb
14:29:56,952 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4678a2eb
14:29:56,952 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@4678a2eb
14:29:56,955 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fdfafd2
14:29:56,955 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fdfafd2
14:29:56,955 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fdfafd2
14:29:56,958 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c87bfe2
14:29:56,960 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@4cc6fa2a
14:29:56,962 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@590c73d3
14:29:56,962 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@590c73d3
14:29:56,963 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@590c73d3
14:29:56,965 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@435871cb
14:29:56,965 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@435871cb
14:29:56,966 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@435871cb
14:29:56,968 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4bef0fe3
14:29:56,969 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@55b5f5d2
14:29:56,978 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2c88b9fc
14:29:56,979 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c88b9fc
14:29:56,980 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47605f2f
14:29:56,988 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@12dae582
14:29:56,989 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dae582
14:29:56,994 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@3c435123
14:29:56,995 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c435123
14:29:56,996 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a8fa663
14:29:56,998 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@546ccad7
14:29:57,001 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4264b240
14:29:57,008 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@30990c1b
14:29:57,008 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30990c1b
14:29:57,010 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dbe250d
14:29:57,010 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@553f1d75
14:29:57,011 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e1d8f9e
14:29:57,011 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e34ace1
14:29:57,012 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62fe6067
14:29:57,012 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f071df8
14:29:57,013 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de41af9
14:29:57,013 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ace400
14:29:57,617 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
14:29:57,618 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
14:29:57,618 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
14:29:57,646  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
14:29:57,721 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
14:29:57,725 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
14:29:57,891 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
14:29:57,893 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
14:29:57,896 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
14:29:57,896 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
14:29:57,897 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
14:29:57,901 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
14:29:57,903 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
14:29:57,907 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
14:29:57,909 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
14:29:57,911 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
14:29:57,912 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
14:29:57,914 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
14:29:57,915 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
14:29:57,918 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
14:29:58,077 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
14:29:58,122 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.domain.MyStudent -> MyStudent
14:29:58,151 DEBUG ModelBinder:2501 - Mapped property: id -> [id]
14:29:58,154 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [mystudent]
14:29:58,156 DEBUG ModelBinder:2501 - Mapped property: name -> [name]
14:29:58,156 DEBUG ModelBinder:2501 - Mapped property: age -> [age]
14:29:58,213 DEBUG SessionFactoryImpl:199 - Building session factory
14:29:58,221 DEBUG Settings:69 - SessionFactory name : null
14:29:58,222 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
14:29:58,222 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
14:29:58,222 DEBUG Settings:73 - Statistics: disabled
14:29:58,223 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
14:29:58,223 DEBUG Settings:76 - Default entity-mode: pojo
14:29:58,223 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
14:29:58,224 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
14:29:58,224 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
14:29:58,225 DEBUG Settings:81 - Default batch fetch size: -1
14:29:58,225 DEBUG Settings:82 - Maximum outer join fetch depth: 2
14:29:58,225 DEBUG Settings:83 - Default null ordering: NONE
14:29:58,226 DEBUG Settings:84 - Order SQL updates by primary key: disabled
14:29:58,226 DEBUG Settings:85 - Order SQL inserts for batching: disabled
14:29:58,227 DEBUG Settings:87 - multi-tenancy strategy : NONE
14:29:58,227 DEBUG Settings:89 - JTA Track by Thread: enabled
14:29:58,227 DEBUG Settings:91 - Query language substitutions: {}
14:29:58,228 DEBUG Settings:92 - JPA query language strict compliance: disabled
14:29:58,228 DEBUG Settings:93 - Named query checking : enabled
14:29:58,229 DEBUG Settings:95 - Second-level cache: enabled
14:29:58,229 DEBUG Settings:96 - Second-level query cache: disabled
14:29:58,230 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5aa360ea
14:29:58,230 DEBUG Settings:98 - Second-level cache region prefix: null
14:29:58,231 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
14:29:58,231 DEBUG Settings:100 - Structured second-level cache entries: disabled
14:29:58,231 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
14:29:58,232 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
14:29:58,232 DEBUG Settings:104 - JDBC batch size: 15
14:29:58,233 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
14:29:58,233 DEBUG Settings:106 - Scrollable result sets: enabled
14:29:58,233 DEBUG Settings:107 - Wrap result sets: disabled
14:29:58,234 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
14:29:58,234 DEBUG Settings:109 - JDBC result set fetch size: null
14:29:58,235 DEBUG Settings:110 - Connection release mode: ON_CLOSE
14:29:58,235 DEBUG Settings:111 - Generate SQL with comments: disabled
14:29:58,641 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
14:29:58,642 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\lib\idea_rt.jar;E:\software\jetbrains\IntelliJ IDEA 171.1834.9\plugins\junit\lib\junit-rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\deploy.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\access-bridge-64.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\cldrdata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\dnsns.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jaccess.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jfxrt.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\localedata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\nashorn.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunec.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunjce_provider.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunmscapi.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunpkcs11.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\zipfs.jar;E:\software\jdk1.8x64\jdk\jre\lib\javaws.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfxswt.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\management-agent.jar;E:\software\jdk1.8x64\jdk\jre\lib\plugin.jar;E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;D:\idea2016WK\out\javaee82017\default\test\JavaEE8Tools2017;D:\idea2016WK\out\javaee82017\default\production\JavaEE8Tools2017;D:\idea2016WK\github\tomcat8x64_idea\lib\jsp-api.jar;D:\idea2016WK\github\tomcat8x64_idea\lib\servlet-api.jar;D:\idea2016WK\github\lib8\antlr-2.7.7.jar;D:\idea2016WK\github\lib8\aspectjweaver-1.8.9.jar;D:\idea2016WK\github\lib8\cdi-api-1.1.jar;D:\idea2016WK\github\lib8\classmate-1.3.0.jar;D:\idea2016WK\github\lib8\commons-logging-1.2.jar;D:\idea2016WK\github\lib8\dom4j-1.6.1.jar;D:\idea2016WK\github\lib8\el-api-2.2.jar;D:\idea2016WK\github\lib8\geronimo-jta_1.1_spec-1.1.1.jar;D:\idea2016WK\github\lib8\hibernate-commons-annotations-5.0.1.Final.jar;D:\idea2016WK\github\lib8\hibernate-core-5.2.5.Final.jar;D:\idea2016WK\github\lib8\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\idea2016WK\github\lib8\jandex-2.0.3.Final.jar;D:\idea2016WK\github\lib8\javassist-3.20.0-GA.jar;D:\idea2016WK\github\lib8\javax.inject-1.jar;D:\idea2016WK\github\lib8\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\idea2016WK\github\lib8\jboss-logging-3.3.0.Final.jar;D:\idea2016WK\github\lib8\jsr250-api-1.0.jar;D:\idea2016WK\github\lib8\jstl-1.2.jar;D:\idea2016WK\github\lib8\spring-aop-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-aspects-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-beans-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-support-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-core-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-expression-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-tomcat-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jdbc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jms-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-messaging-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-orm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-oxm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-test-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-tx-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-web-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-portlet-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-websocket-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\tomcat-servlet-api-8.5.9.jar;D:\idea2016WK\libs\log4j-1.2.17.jar;D:\idea2016WK\libs\junit-4.11.jar;D:\idea2016WK\libs\mysql-connector-java-5.1.35-bin.jar;D:\idea2016WK\libs\slf4j-api-1.7.10.jar;D:\idea2016WK\libs\slf4j-log4j12-1.7.10.jar;D:\idea2016WK\libs\hamcrest-all-1.3.jar;D:\idea2016WK\libs\oracle-driver-ojdbc-12.1.0.2.jar;D:\idea2016WK\out\javaee82017\default\production\javaee8-core;D:\idea2016WK\out\javaee82017\default\production\javaee8-hibernate, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, os.name=Windows 7, java.vm.specification.version=1.8, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=E:\software\jdk1.8x64\jdk\jre\bin, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 qin.javaee8.test.MakeTable, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, idea.launcher.port=24266, java.specification.vendor=Oracle Corporation, java.home=E:\software\jdk1.8x64\jdk\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\sunrsasign.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0-b132, user.name=Administrator, path.separator=;, os.version=6.1, java.endorsed.dirs=E:\software\jdk1.8x64\jdk\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@6d06d69c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, idea.launcher.bin.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\bin, java.version=1.8.0, user.dir=D:\idea2016WK\github\JavaEE8Tools2017, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@78d39a69, java.library.path=E:\software\jdk1.8x64\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;d:\app\Administrator\product\12.1.0\dbhome_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;E:\software\maven0339\bin;C:\Program Files\TortoiseSVN\bin;E:\software\visual_svn\bin;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\TortoiseGit\bin;D:\xampps\perl\bin\;C:\Program Files\MySQL\MySQL Utilities 1.6\;E:\xampps\perl\bin\;E:\software\ZendServer\ZendServer\share\ZendFramework\bin;E:\software\ZendServer\ZendServer\bin;E:\software\Zend\DB2\BIN;E:\software\Zend\DB2\FUNCTION;C:\Program Files\MySQL\MySQL Server 5.7\bin;E:\software\jdk1.8x64\jdk\bin;C:\Users\Administrator\AppData\Local\atom\bin;E:\software\搜狐影音\5.0.2.23;e:\software\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.0-b70, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@40005471, java.ext.dirs=E:\software\jdk1.8x64\jdk\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
14:29:58,676 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
14:29:58,688 DEBUG SessionFactoryImpl:294 - Instantiated session factory
14:29:58,802 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.domain.MyStudent] is safe
14:29:58,803 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.domain.MyStudent
14:29:58,920 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.domain.MyStudent
14:29:58,921 DEBUG AbstractEntityPersister:3549 -  Version select: select id from MyStudent where id =?
14:29:58,921 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select mystudent_.id, mystudent_.name as name2_0_, mystudent_.age as age3_0_ from MyStudent mystudent_ where mystudent_.id=?
14:29:58,922 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into MyStudent (name, age, id) values (?, ?, ?)
14:29:58,922 DEBUG AbstractEntityPersister:394 -  Update 0: update MyStudent set name=?, age=? where id=?
14:29:58,922 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from MyStudent where id=?
14:29:58,991 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ce2f62]
14:29:58,996 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:58,996 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:58,997 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,033 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,052 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,057 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [NONE]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=?
14:29:59,057 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f8a80]
14:29:59,058 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,058 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,058 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,059 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,059 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,060 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [READ]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=?
14:29:59,060 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72805168]
14:29:59,061 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,061 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,061 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,062 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,063 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,063 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [UPGRADE]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? for update
14:29:59,063 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f1bbe0]
14:29:59,064 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,064 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,064 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,065 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,066 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,073 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [UPGRADE_NOWAIT]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? for update
14:29:59,073 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c211fd0]
14:29:59,074 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,074 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,074 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,075 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,076 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,076 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [UPGRADE_SKIPLOCKED]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? for update
14:29:59,077 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d84cb86]
14:29:59,077 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,077 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,078 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,078 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,079 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,079 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [FORCE]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? for update
14:29:59,080 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588ffeb]
14:29:59,084 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,085 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,085 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,086 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,087 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,103 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [PESSIMISTIC_READ]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? lock in share mode
14:29:59,106 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@baf1bb3]
14:29:59,106 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,107 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,109 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,109 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,112 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,112 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [PESSIMISTIC_WRITE]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? for update
14:29:59,113 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d958c6]
14:29:59,114 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,114 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,114 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,116 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,117 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,136 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [PESSIMISTIC_FORCE_INCREMENT]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=? for update
14:29:59,137 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3703bf3c]
14:29:59,137 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,137 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,138 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,138 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,140 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,140 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [OPTIMISTIC]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=?
14:29:59,140 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3f3ba0]
14:29:59,141 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : name
14:29:59,141 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : age
14:29:59,141 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
14:29:59,142 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
14:29:59,143 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MyStudent)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MyStudent, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MyStudent)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MyStudent)
          - SQL table alias mapping - mystudent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

14:29:59,143 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MyStudent [OPTIMISTIC_FORCE_INCREMENT]: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=?
14:29:59,178 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.domain.MyStudent: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=?
14:29:59,178 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.domain.MyStudent: select mystudent0_.id as id1_0_0_, mystudent0_.name as name2_0_0_, mystudent0_.age as age3_0_0_ from MyStudent mystudent0_ where mystudent0_.id=?
14:29:59,388 DEBUG SQL:92 - 
    
    create table MyStudent (
        id integer not null,
        name varchar(255),
        age integer,
        primary key (id)
    ) ENGINE=InnoDB
14:29:59,508 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
14:29:59,510 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
14:29:59,523 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:29:59,526 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
14:29:59,527 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
14:29:59,531 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7bde1f3a
14:29:59,531 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: ba239038-7a5b-49d7-b0be-fc62b780d6fc (<unnamed>)
14:29:59,532 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
14:29:59,672  INFO HibernateTransactionManager:357 - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@40005471] of Hibernate SessionFactory for HibernateTransactionManager
14:29:59,935 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
14:29:59,957 DEBUG TransactionImpl:55 - begin
19:12:44,929  INFO ClassPathXmlApplicationContext:582 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@357246de: startup date [Fri Jan 13 19:12:44 CST 2017]; root of context hierarchy
19:12:46,095  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [applicationContext.xml]
19:12:48,851  INFO PropertySourcesPlaceholderConfigurer:172 - Loading properties file from class path resource [mysql.jdbc.properties]
19:12:48,873  INFO AutowiredAnnotationBeanPostProcessor:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
19:12:50,712  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
19:12:51,129 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
19:12:51,138 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
19:12:51,157 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
19:12:51,672  INFO Version:45 - HHH000412: Hibernate Core {5.2.5.Final}
19:12:51,677  INFO Environment:213 - HHH000206: hibernate.properties not found
19:12:51,733 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
19:12:51,735 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
19:12:51,745 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
19:12:52,246 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
19:12:52,259 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
19:12:52,260 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
19:12:52,323 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
19:12:52,353  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
19:12:52,392 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
19:12:52,399  WARN deprecation:75 - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
19:12:52,400 DEBUG LocalXmlResourceResolver:79 - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
19:12:52,482 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=qin/javaee8/domain/mobile.goods.hbm.xml,type=RESOURCE)
19:12:55,567 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
19:12:55,568 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@463b4ac8
19:12:55,569 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@463b4ac8
19:12:55,572 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d0d6318
19:12:55,577 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bff34c6
19:12:55,579 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5644dc81
19:12:55,583 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
19:12:55,587 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5c42d2b7
19:12:55,588 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c42d2b7
19:12:55,591 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@774698ab
19:12:55,591 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@774698ab
19:12:55,592 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@774698ab
19:12:55,596 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
19:12:55,597 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@b6b1987
19:12:55,598 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b6b1987
19:12:55,601 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@7c541c15
19:12:55,601 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@7c541c15
19:12:55,602 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c541c15
19:12:55,608 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
19:12:55,609 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@c1bd0be
19:12:55,609 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c1bd0be
19:12:55,613 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
19:12:55,614 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@39ad977d
19:12:55,614 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ad977d
19:12:55,618 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
19:12:55,619 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3a3e4aff
19:12:55,619 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3e4aff
19:12:55,626 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62452cc9
19:12:55,627 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62452cc9
19:12:55,630 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7516e4e5
19:12:55,631 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7516e4e5
19:12:55,636 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@3e7634b9
19:12:55,636 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e7634b9
19:12:55,640 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@abf688e
19:12:55,643 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@686449f9
19:12:55,646 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@36f48b4
19:12:55,647 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36f48b4
19:12:55,651 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@3f792b9b
19:12:55,653 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f792b9b
19:12:55,717 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@52045dbe
19:12:55,718 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52045dbe
19:12:55,723 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
19:12:55,723 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@73163d48
19:12:55,728 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4504d271
19:12:55,729 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4504d271
19:12:55,734 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
19:12:55,736 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cae1042
19:12:55,742 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
19:12:55,743 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f667fe
19:12:55,748 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
19:12:55,749 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c626be
19:12:55,760 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
19:12:55,761 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@792bbc74
19:12:55,765 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@758c83d8
19:12:55,766 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@758c83d8
19:12:55,774 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@58359ebd
19:12:55,774 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@58359ebd
19:12:55,778 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ee37ca3
19:12:55,795 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ee37ca3
19:12:55,796 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ee37ca3
19:12:55,800 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b030a0
19:12:55,820 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@56bca85b
19:12:55,821 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56bca85b
19:12:55,822 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56bca85b
19:12:55,825 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60d1a32f
19:12:55,830 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@40c80397
19:12:55,831 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40c80397
19:12:55,834 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@7c2b6087
19:12:55,835 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7c2b6087
19:12:55,841 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b324585
19:12:55,842 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b324585
19:12:55,844 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@5974109
19:12:55,845 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5974109
19:12:55,849 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75f5fd58
19:12:55,850 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75f5fd58
19:12:55,852 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12bcd0c0
19:12:55,855 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@4678a2eb
19:12:55,859 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4678a2eb
19:12:55,869 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@4678a2eb
19:12:55,874 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fdfafd2
19:12:55,875 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fdfafd2
19:12:55,876 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fdfafd2
19:12:55,881 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c87bfe2
19:12:55,883 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@4cc6fa2a
19:12:55,888 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@590c73d3
19:12:55,889 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@590c73d3
19:12:55,890 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@590c73d3
19:12:55,893 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@435871cb
19:12:55,894 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@435871cb
19:12:55,894 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@435871cb
19:12:55,897 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@4bef0fe3
19:12:55,902 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@55b5f5d2
19:12:55,915 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@2c88b9fc
19:12:55,916 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c88b9fc
19:12:55,918 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47605f2f
19:12:55,932 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@12dae582
19:12:55,932 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12dae582
19:12:55,944 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@3c435123
19:12:55,944 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c435123
19:12:55,946 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a8fa663
19:12:55,949 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@546ccad7
19:12:55,953 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4264b240
19:12:55,975 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@30990c1b
19:12:55,976 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30990c1b
19:12:55,978 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2dbe250d
19:12:55,979 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@553f1d75
19:12:55,979 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e1d8f9e
19:12:55,981 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e34ace1
19:12:55,981 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62fe6067
19:12:55,981 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f071df8
19:12:55,982 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de41af9
19:12:55,982 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ace400
19:12:57,029 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.16-log
      major : 5
      minor : 7
19:12:57,030 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
19:12:57,030 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
19:12:57,078  INFO Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
19:12:57,216 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
19:12:57,223 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
19:12:57,535 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
19:12:57,539 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
19:12:57,543 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
19:12:57,544 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
19:12:57,545 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
19:12:57,550 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
19:12:57,552 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
19:12:57,557 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
19:12:57,561 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
19:12:57,563 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
19:12:57,565 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
19:12:57,567 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
19:12:57,567 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
19:12:57,570 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
19:12:57,736 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
19:12:57,802 DEBUG ModelBinder:230 - Mapping class: qin.javaee8.domain.MobileGoods -> mobileGoods8
19:12:57,842 DEBUG ModelBinder:2501 - Mapped property: id -> [mobileGoods_id]
19:12:57,847 DEBUG PrimaryKey:35 - Forcing column [mobilegoods_id] to be non-null as it is part of the primary key for table [mobilegoods8]
19:12:57,850 DEBUG ModelBinder:2501 - Mapped property: goods_number -> [mobile_goodsNumber]
19:12:57,851 DEBUG ModelBinder:2501 - Mapped property: goods_name -> [mobile_goodsName]
19:12:57,852 DEBUG ModelBinder:2501 - Mapped property: goods_price -> [mobile_goodsPrice]
19:12:57,852 DEBUG ModelBinder:2501 - Mapped property: goods_description -> [goods_description]
19:12:57,951 DEBUG SessionFactoryImpl:199 - Building session factory
19:12:57,953 DEBUG Settings:69 - SessionFactory name : null
19:12:57,954 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
19:12:57,955 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
19:12:57,955 DEBUG Settings:73 - Statistics: disabled
19:12:57,956 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
19:12:57,956 DEBUG Settings:76 - Default entity-mode: pojo
19:12:57,957 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
19:12:57,957 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
19:12:57,957 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
19:12:57,958 DEBUG Settings:81 - Default batch fetch size: -1
19:12:57,958 DEBUG Settings:82 - Maximum outer join fetch depth: 2
19:12:57,958 DEBUG Settings:83 - Default null ordering: NONE
19:12:57,959 DEBUG Settings:84 - Order SQL updates by primary key: disabled
19:12:57,959 DEBUG Settings:85 - Order SQL inserts for batching: disabled
19:12:57,959 DEBUG Settings:87 - multi-tenancy strategy : NONE
19:12:57,960 DEBUG Settings:89 - JTA Track by Thread: enabled
19:12:57,961 DEBUG Settings:91 - Query language substitutions: {}
19:12:57,963 DEBUG Settings:92 - JPA query language strict compliance: disabled
19:12:57,963 DEBUG Settings:93 - Named query checking : enabled
19:12:57,964 DEBUG Settings:95 - Second-level cache: enabled
19:12:57,965 DEBUG Settings:96 - Second-level query cache: disabled
19:12:57,965 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5aa360ea
19:12:57,966 DEBUG Settings:98 - Second-level cache region prefix: null
19:12:57,967 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
19:12:57,967 DEBUG Settings:100 - Structured second-level cache entries: disabled
19:12:57,968 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
19:12:57,968 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
19:12:57,969 DEBUG Settings:104 - JDBC batch size: 15
19:12:57,969 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
19:12:57,969 DEBUG Settings:106 - Scrollable result sets: enabled
19:12:57,970 DEBUG Settings:107 - Wrap result sets: disabled
19:12:57,970 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
19:12:57,972 DEBUG Settings:109 - JDBC result set fetch size: null
19:12:57,973 DEBUG Settings:110 - Connection release mode: ON_CLOSE
19:12:57,973 DEBUG Settings:111 - Generate SQL with comments: disabled
19:12:58,464 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
19:12:58,466 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.class.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\lib\idea_rt.jar;E:\software\jetbrains\IntelliJ IDEA 171.1834.9\plugins\junit\lib\junit-rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\deploy.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\access-bridge-64.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\cldrdata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\dnsns.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jaccess.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\jfxrt.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\localedata.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\nashorn.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunec.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunjce_provider.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunmscapi.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\sunpkcs11.jar;E:\software\jdk1.8x64\jdk\jre\lib\ext\zipfs.jar;E:\software\jdk1.8x64\jdk\jre\lib\javaws.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfxswt.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\management-agent.jar;E:\software\jdk1.8x64\jdk\jre\lib\plugin.jar;E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;D:\idea2016WK\out\javaee82017\default\test\JavaEE8Tools2017;D:\idea2016WK\out\javaee82017\default\production\JavaEE8Tools2017;D:\idea2016WK\github\tomcat8x64_idea\lib\jsp-api.jar;D:\idea2016WK\github\tomcat8x64_idea\lib\servlet-api.jar;D:\idea2016WK\github\lib8\antlr-2.7.7.jar;D:\idea2016WK\github\lib8\aspectjweaver-1.8.9.jar;D:\idea2016WK\github\lib8\cdi-api-1.1.jar;D:\idea2016WK\github\lib8\classmate-1.3.0.jar;D:\idea2016WK\github\lib8\commons-logging-1.2.jar;D:\idea2016WK\github\lib8\dom4j-1.6.1.jar;D:\idea2016WK\github\lib8\el-api-2.2.jar;D:\idea2016WK\github\lib8\geronimo-jta_1.1_spec-1.1.1.jar;D:\idea2016WK\github\lib8\hibernate-commons-annotations-5.0.1.Final.jar;D:\idea2016WK\github\lib8\hibernate-core-5.2.5.Final.jar;D:\idea2016WK\github\lib8\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\idea2016WK\github\lib8\jandex-2.0.3.Final.jar;D:\idea2016WK\github\lib8\javassist-3.20.0-GA.jar;D:\idea2016WK\github\lib8\javax.inject-1.jar;D:\idea2016WK\github\lib8\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\idea2016WK\github\lib8\jboss-logging-3.3.0.Final.jar;D:\idea2016WK\github\lib8\jsr250-api-1.0.jar;D:\idea2016WK\github\lib8\jstl-1.2.jar;D:\idea2016WK\github\lib8\spring-aop-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-aspects-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-beans-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-context-support-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-core-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-expression-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-instrument-tomcat-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jdbc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-jms-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-messaging-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-orm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-oxm-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-test-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-tx-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-web-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-webmvc-portlet-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\spring-websocket-4.3.5.RELEASE.jar;D:\idea2016WK\github\lib8\tomcat-servlet-api-8.5.9.jar;D:\idea2016WK\libs\log4j-1.2.17.jar;D:\idea2016WK\libs\junit-4.11.jar;D:\idea2016WK\libs\mysql-connector-java-5.1.35-bin.jar;D:\idea2016WK\libs\slf4j-api-1.7.10.jar;D:\idea2016WK\libs\slf4j-log4j12-1.7.10.jar;D:\idea2016WK\libs\hamcrest-all-1.3.jar;D:\idea2016WK\libs\oracle-driver-ojdbc-12.1.0.2.jar;D:\idea2016WK\out\javaee82017\default\production\javaee8-core;D:\idea2016WK\out\javaee82017\default\production\javaee8-hibernate, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Shanghai, os.name=Windows 7, java.vm.specification.version=1.8, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=E:\software\jdk1.8x64\jdk\jre\bin, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 qin.javaee8.test.MakeTable, sun.cpu.endian=little, user.home=C:\Users\Administrator, user.language=zh, idea.launcher.port=51215, java.specification.vendor=Oracle Corporation, java.home=E:\software\jdk1.8x64\jdk\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=E:\software\jdk1.8x64\jdk\jre\lib\resources.jar;E:\software\jdk1.8x64\jdk\jre\lib\rt.jar;E:\software\jdk1.8x64\jdk\jre\lib\sunrsasign.jar;E:\software\jdk1.8x64\jdk\jre\lib\jsse.jar;E:\software\jdk1.8x64\jdk\jre\lib\jce.jar;E:\software\jdk1.8x64\jdk\jre\lib\charsets.jar;E:\software\jdk1.8x64\jdk\jre\lib\jfr.jar;E:\software\jdk1.8x64\jdk\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0-b132, user.name=Administrator, path.separator=;, os.version=6.1, java.endorsed.dirs=E:\software\jdk1.8x64\jdk\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@6d06d69c], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, idea.launcher.bin.path=E:\software\jetbrains\IntelliJ IDEA 171.1834.9\bin, java.version=1.8.0, user.dir=D:\idea2016WK\github\JavaEE8Tools2017, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@78d39a69, java.library.path=E:\software\jdk1.8x64\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;d:\app\Administrator\product\12.1.0\dbhome_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;E:\software\maven0339\bin;C:\Program Files\TortoiseSVN\bin;E:\software\visual_svn\bin;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\TortoiseGit\bin;D:\xampps\perl\bin\;C:\Program Files\MySQL\MySQL Utilities 1.6\;E:\xampps\perl\bin\;E:\software\ZendServer\ZendServer\share\ZendFramework\bin;E:\software\ZendServer\ZendServer\bin;E:\software\Zend\DB2\BIN;E:\software\Zend\DB2\FUNCTION;C:\Program Files\MySQL\MySQL Server 5.7\bin;E:\software\jdk1.8x64\jdk\bin;C:\Users\Administrator\AppData\Local\atom\bin;E:\software\搜狐影音\5.0.2.23;e:\software\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.0-b70, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@40005471, java.ext.dirs=E:\software\jdk1.8x64\jdk\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
19:12:58,508 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
19:12:58,527 DEBUG SessionFactoryImpl:294 - Instantiated session factory
19:12:58,688 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [qin.javaee8.domain.MobileGoods] is safe
19:12:58,688 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : qin.javaee8.domain.MobileGoods
19:12:58,844 DEBUG AbstractEntityPersister:3544 - Static SQL for entity: qin.javaee8.domain.MobileGoods
19:12:58,845 DEBUG AbstractEntityPersister:3549 -  Version select: select mobileGoods_id from mobileGoods8 where mobileGoods_id =?
19:12:58,845 DEBUG AbstractEntityPersister:3552 -  Snapshot select: select mobilegood_.mobileGoods_id, mobilegood_.mobile_goodsNumber as mobile_g2_0_, mobilegood_.mobile_goodsName as mobile_g3_0_, mobilegood_.mobile_goodsPrice as mobile_g4_0_, mobilegood_.goods_description as goods_de5_0_ from mobileGoods8 mobilegood_ where mobilegood_.mobileGoods_id=?
19:12:58,846 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into mobileGoods8 (mobile_goodsNumber, mobile_goodsName, mobile_goodsPrice, goods_description, mobileGoods_id) values (?, ?, ?, ?, ?)
19:12:58,846 DEBUG AbstractEntityPersister:394 -  Update 0: update mobileGoods8 set mobile_goodsNumber=?, mobile_goodsName=?, mobile_goodsPrice=?, goods_description=? where mobileGoods_id=?
19:12:58,846 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from mobileGoods8 where mobileGoods_id=?
19:12:58,949 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f012914]
19:12:58,953 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:58,954 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:58,955 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:58,956 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:58,957 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,012 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,031 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,037 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [NONE]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=?
19:12:59,038 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72805168]
19:12:59,040 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,041 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,042 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,042 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,042 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,043 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,045 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,045 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [READ]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=?
19:12:59,047 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f1bbe0]
19:12:59,048 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,048 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,048 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,049 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,049 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,050 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,245 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,245 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [UPGRADE]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? for update
19:12:59,247 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c211fd0]
19:12:59,248 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,248 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,250 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,253 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,253 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,254 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,256 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,258 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [UPGRADE_NOWAIT]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? for update
19:12:59,261 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d84cb86]
19:12:59,262 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,262 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,262 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,263 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,263 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,264 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,265 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,268 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [UPGRADE_SKIPLOCKED]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? for update
19:12:59,269 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588ffeb]
19:12:59,284 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,286 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,287 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,288 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,289 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,290 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,291 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,291 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [FORCE]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? for update
19:12:59,292 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@baf1bb3]
19:12:59,292 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,294 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,294 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,294 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,295 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,295 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,297 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,301 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [PESSIMISTIC_READ]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? lock in share mode
19:12:59,309 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d958c6]
19:12:59,309 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,309 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,310 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,310 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,310 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,311 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,312 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,313 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [PESSIMISTIC_WRITE]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? for update
19:12:59,313 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3703bf3c]
19:12:59,313 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,314 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,314 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,314 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,320 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,322 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,323 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,323 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [PESSIMISTIC_FORCE_INCREMENT]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=? for update
19:12:59,324 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b3f3ba0]
19:12:59,325 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,325 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,325 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,326 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,326 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,327 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,328 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,328 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [OPTIMISTIC]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=?
19:12:59,329 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278f8425]
19:12:59,329 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_number
19:12:59,330 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_name
19:12:59,330 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_price
19:12:59,331 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : goods_description
19:12:59,331 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
19:12:59,419 DEBUG LoadQueryJoinAndFetchProcessor:100 - processing queryspace <gen:0>
19:12:59,441 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=qin.javaee8.domain.MobileGoods)
    - Returns
       - EntityReturnImpl(entity=qin.javaee8.domain.MobileGoods, querySpaceUid=<gen:0>, path=qin.javaee8.domain.MobileGoods)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=qin.javaee8.domain.MobileGoods)
          - SQL table alias mapping - mobilegood0_
          - alias suffix - 0_
          - suffixed key columns - {mobileGo1_0_0_}

19:12:59,441 DEBUG EntityLoader:115 - Static select for entity qin.javaee8.domain.MobileGoods [OPTIMISTIC_FORCE_INCREMENT]: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=?
19:12:59,543 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity qin.javaee8.domain.MobileGoods: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=?
19:12:59,544 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity qin.javaee8.domain.MobileGoods: select mobilegood0_.mobileGoods_id as mobileGo1_0_0_, mobilegood0_.mobile_goodsNumber as mobile_g2_0_0_, mobilegood0_.mobile_goodsName as mobile_g3_0_0_, mobilegood0_.mobile_goodsPrice as mobile_g4_0_0_, mobilegood0_.goods_description as goods_de5_0_0_ from mobileGoods8 mobilegood0_ where mobilegood0_.mobileGoods_id=?
19:12:59,942 DEBUG SQL:92 - 
    
    create table mobileGoods8 (
        mobileGoods_id bigint not null,
        mobile_goodsNumber bigint,
        mobile_goodsName varchar(100),
        mobile_goodsPrice double precision,
        goods_description longtext,
        primary key (mobileGoods_id)
    ) ENGINE=InnoDB
19:13:00,178 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
19:13:00,180 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
19:13:00,197 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
19:13:00,200 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
19:13:00,201 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
19:13:00,206 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@67dba613
19:13:00,206 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 8e7b5786-f2d4-4b62-9d3a-cf9e40652498 (<unnamed>)
19:13:00,207 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
19:13:00,411  INFO HibernateTransactionManager:357 - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@40005471] of Hibernate SessionFactory for HibernateTransactionManager
19:13:00,835 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
19:13:00,853 DEBUG TransactionImpl:55 - begin
